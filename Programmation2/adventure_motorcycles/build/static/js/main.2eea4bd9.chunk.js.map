{"version":3,"sources":["img/404motorcycle.png","Components/Motorcycle.js","Components/ManageMotorcycle.js","Components/Accueil.js","Components/PageNotFound.js","Components/FormAjouterMoto.js","Components/AjouterMoto.js","Components/BoutonAjouterMoto.js","Components/BoutonRetourAccueil.js","Components/FormEditMoto.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Motorcycle","Col","sm","className","Card","style","width","Img","variant","src","this","props","photo","Body","Title","to","model","id","Subtitle","factory","Text","description","prix","React","Component","ManageMotorcycle","state","donneesRecues","fetch","response","json","reponseDeApi","setState","ok","Error","statusText","console","log","Container","fluid","Row","map","key","i","modele","fabricant","specifications","Accueil","PageNotFound","Image","require","alt","FormAjouterMoto","handlePhoto","bind","handleAdd","addMoto","picture","manufacturer","comments","price","getID","newID","method","headers","body","JSON","stringify","jsonResponse","history","push","toast","success","nextID","length","event","preventDefault","document","getElementById","value","image","Form","Group","controlId","Label","Control","onBlur","type","rounded","placeholder","Button","onClick","defaultProps","AjouterMoto","BoutonAjouterMoto","BoutonRetourAccueil","FormEditMoto","setErrors","handleEdit","editMoto","removeMoto","motoID","location","search","substring","warning","error","photos","Object","assign","defaultValue","App","useLocation","autoClose","hideProgressBar","pathname","startsWith","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2eea4bd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404motorcycle.3e78af66.png\";","import React from \"react\";\r\nimport { Col, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Component pour l'affichage des motos dans des cards\r\nexport class Motorcycle extends React.Component {\r\n  render() {\r\n    return (\r\n      <Col sm={3} className=\"mt-5\">\r\n        <Card style={{ width: \"28rem\" }}>\r\n          <Card.Img variant=\"top\" src={this.props.photo} />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              <Link\r\n                to={\"Motorcycle/\" + this.props.model + \"?id=\" + this.props.id}\r\n              >\r\n                <h2>{this.props.model}</h2>\r\n              </Link>\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              {this.props.factory}\r\n            </Card.Subtitle>\r\n            <Card.Text>{this.props.description}</Card.Text>\r\n            <Card.Text>{this.props.prix}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Motorcycle } from \"./Motorcycle\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nexport class ManageMotorcycle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { donneesRecues: [] };\r\n  }\r\n\r\n  //Ajout de la gestion des erreurs\r\n  //Adresse du server(3001) avec le nom de la base de données\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles\"\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      this.setState({ donneesRecues: reponseDeApi });\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async specscomponentDidMount() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles\"\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      this.setState({ donneesRecues: reponseDeApi });\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.state.donneesRecues);\r\n    return (\r\n      <Container fluid>\r\n        <h1>Affichage de la liste des motos</h1>\r\n        <Row>\r\n          {this.state.donneesRecues.map((key, i) => (\r\n            <Motorcycle\r\n              photo={key.photo}\r\n              model={key.modele}\r\n              factory={key.fabricant}\r\n              key={key.modele + key.id}\r\n              description={key.specifications[0].description}\r\n              prix={key.specifications[1].prix}\r\n              id={i + 1}\r\n            ></Motorcycle>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { ManageMotorcycle } from \"./ManageMotorcycle\";\r\n\r\n//Component pour la structure du site et le lien vers manage de la bd\r\nexport class Accueil extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"text-center\">\r\n          <Col>\r\n            <ManageMotorcycle />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nexport class PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"text-center\">\r\n        <Col>\r\n          <h1>Page introuvable</h1>\r\n          <Image\r\n            className=\"d-inline-block\"\r\n            src={require(\"../img/404motorcycle.png\")}\r\n            alt=\"Page introuvable erreur 404\"\r\n          />\r\n          <p>Nous serons bientôt là...revenez un peu plus tard</p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Button, Image, Container } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//Formulaire d'ajout pour une nouvelle moto\r\nexport class FormAjouterMoto extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { photo: \"\" };\r\n\r\n    this.handlePhoto = this.handlePhoto.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.addMoto = this.addMoto.bind(this);\r\n  }\r\n\r\n  async addMoto(picture, model, manufacturer, comments, price) {\r\n    try {\r\n      const newID = await this.getID(); /*Fonction pour obtenir le dernier id de la bd */\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\",\r\n        {\r\n          /*Pour un ajout utiliser la méthode POST */\r\n          method: \"POST\",\r\n          /*Pour un ajout ajouter un headers */\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: newID,\r\n            modele: model,\r\n            fabricant: manufacturer,\r\n            photo: picture,\r\n            specifications: [\r\n              {\r\n                description: comments,\r\n              },\r\n              {\r\n                prix: price,\r\n              },\r\n            ],\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        this.props.history.push(\"/\"); //Retour à la page d'accueil\r\n        toast.success(\"Ajout de la moto, modèle:  \" + model);\r\n\r\n        return jsonResponse;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //Retourne le prochain ID pour savoir où ajouter la nouvel objet\r\n  async getID() {\r\n    try {\r\n      let nextID = 0;\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\"\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      for (let i = 0; i < reponseDeApi.length; i++) {\r\n        if (reponseDeApi[i].id > nextID) {\r\n          nextID = reponseDeApi[i].id;\r\n        }\r\n      }\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return nextID + 1;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleAdd(event) {\r\n    event.preventDefault(); /*Empêche de rafraîchir la page, car le bouton est de type submit*/\r\n    /*variables des infos entrées dans le formulaire*/\r\n    const picture = document.getElementById(\"urlPhoto\").value;\r\n    const model = document.getElementById(\"nomModele\").value;\r\n    const manufacturer = document.getElementById(\"nomFabricant\").value;\r\n    const comments = document.getElementById(\"texteDescription\").value;\r\n    const price = document.getElementById(\"valeurPrix\").value;\r\n\r\n    /*Fonction pour entrer les infos dans la bd */\r\n    this.addMoto(picture, model, manufacturer, comments, price);\r\n  }\r\n\r\n  //Affiche la photo entrer en input, lorsque la souris sort du champ, grâce au changement d'état\r\n  handlePhoto() {\r\n    const image = document.getElementById(\"urlPhoto\").value;\r\n    this.setState({ photo: image });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h1>Formulaire d'enregistrement d'une nouvelle moto</h1>\r\n            <Form>\r\n              <Form.Group controlId=\"urlPhoto\">\r\n                <Form.Label>Entrer l'url de l'image</Form.Label>\r\n                <Form.Control onBlur={this.handlePhoto} type=\"text\" />\r\n                {this.state.photo !== \"\" && (\r\n                  <Image src={this.state.photo} rounded width=\"125\" />\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"nomModele\">\r\n                <Form.Label>Entrer le modèle de la moto</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"exemple: 790 ADVENTURE R\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  ajouter une validation\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"nomFabricant\">\r\n                <Form.Label>Entrer le nom du fabricant</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"exemple: KTM\" />\r\n              </Form.Group>\r\n              <Form.Text className=\"text-muted\">\r\n                Faire un menu déroulant\r\n              </Form.Text>\r\n              <Form.Group controlId=\"texteDescription\">\r\n                <Form.Label>Description de la moto</Form.Label>\r\n                <Form.Control type=\"text\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"valeurPrix\">\r\n                <Form.Label>Entrer le prix coûtant</Form.Label>\r\n                <Form.Control type=\"text\" />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" onClick={this.handleAdd}>\r\n                Ajouter une moto\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nFormAjouterMoto.defaultProps = { history: \"/\" };\r\n","import React from \"react\";\r\nimport { FormAjouterMoto } from \"./FormAjouterMoto\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nexport class AjouterMoto extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormAjouterMoto history={this.props.history} />\r\n      </>\r\n    );\r\n  }\r\n}\r\nAjouterMoto.defaultProps = { history: \"/\" };\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nexport class BoutonAjouterMoto extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col className=\"text-right\">\r\n          <Link to=\"/ajouterMoto\" className=\"btn btn-primary\">\r\n            Ajouter une moto\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nexport class BoutonRetourAccueil extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col className=\"text-right\">\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            Retour à l'accueil\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Form, Button, Image, Container, Row, Col } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport class FormEditMoto extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Afin d'éviter une erreur undefined lorsqu'on lit le tableau specifications, on l'initialise à un tableau vide pour débuter.\r\n    this.state = {\r\n      donneesRecues: {\r\n        modele: \"\",\r\n        fabricant: \"\",\r\n        photo: \"\",\r\n        specifications: [\"\", \"\"],\r\n      },\r\n      setErrors: {},\r\n    };\r\n    //setErrors, pour la validation du formulaire\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.editMoto = this.editMoto.bind(this);\r\n    this.handlePhoto = this.handlePhoto.bind(this);\r\n    this.removeMoto = this.removeMoto.bind(this);\r\n  }\r\n  //On récupère le Pokemon pour ensuite remplir le formulaire.\r\n  async componentDidMount() {\r\n    //On récupère le dernier caractère de l'url\r\n    try {\r\n      await this.setState({\r\n        motoID: this.props.location.search.substring(\r\n          4,\r\n          this.props.location.search.length\r\n        ),\r\n      });\r\n      await console.log(this.state.motoID);\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\" + this.state.motoID\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      this.setState({ donneesRecues: reponseDeApi });\r\n      console.log(this.state.donneesRecues);\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Méthode pour modifier la bd avec le formulaire, semblable à l'ajout ajouter l'id à l'URL et changer la methode pour PUT\r\n  async editMoto(picture, model, manufacturer, comments, price) {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\" + this.state.motoID,\r\n        {\r\n          /*Pour un ajout utiliser la méthode POST */\r\n          method: \"PUT\",\r\n          /*Pour un ajout ajouter un headers */\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: this.state.motoID,\r\n            modele: model,\r\n            fabricant: manufacturer,\r\n            photo: picture,\r\n            specifications: [\r\n              {\r\n                description: comments,\r\n              },\r\n              {\r\n                prix: price,\r\n              },\r\n            ],\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        this.props.history.push(\"/\"); //Retour à la page d'accueil\r\n        toast.warning(\"Modification de la moto, modèle:  \" + model);\r\n\r\n        return jsonResponse;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleEdit(event) {\r\n    event.preventDefault(); /*Empêche de rafraîchir la page, car le bouton est de type submit*/\r\n    /*variables des infos entrées dans le formulaire*/\r\n    const picture = document.getElementById(\"photoMoto\").value;\r\n    const model = document.getElementById(\"modeleMoto\").value;\r\n    const manufacturer = document.getElementById(\"fabricantMoto\").value;\r\n    const comments = document.getElementById(\"descriptionMoto\").value;\r\n    const price = document.getElementById(\"prixMoto\").value;\r\n\r\n    /*Fonction pour entrer les infos dans la bd */\r\n    this.editMoto(picture, model, manufacturer, comments, price);\r\n  }\r\n  //Méthode pour supprimer la moto de la bd\r\n  async removeMoto() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\" + this.state.motoID,\r\n        {\r\n          method: \"delete\",\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n\r\n        console.log(\"SUPPRESSION!\");\r\n\r\n        this.props.history.push(\"/\");\r\n\r\n        toast.error(\"Supression de la moto \");\r\n\r\n        return jsonResponse;\r\n      }\r\n\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Méthode sur événement onBlur, si une image est changé elle s'affichera lorsque l'on sort du champ\r\n  //Pour le setState, voir le code pour changer une seule propriété de l'objet\r\n  handlePhoto(event) {\r\n    const photos = document.getElementById(\"photoMoto\").value;\r\n    this.setState((state) => ({\r\n      donneesRecues: Object.assign({}, state.donneesRecues, {\r\n        photo: photos,\r\n      }),\r\n    }));\r\n  }\r\n  render() {\r\n    console.log(this.state.donneesRecues.photo);\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Form.Group controlId=\"modeleMoto\">\r\n                  <Form.Label>Modèle de la moto</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    defaultValue={this.state.donneesRecues.modele}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"fabricantMoto\">\r\n                  <Form.Label>Fabricant de la moto</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    defaultValue={this.state.donneesRecues.fabricant}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"photoMoto\">\r\n                  <Form.Label>URL d'une photo de la moto</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Entrer une URL valide\"\r\n                    onBlur={this.handlePhoto}\r\n                    defaultValue={this.state.donneesRecues.photo}\r\n                  />\r\n                  {this.state.donneesRecues.photo !== \"\" && (\r\n                    <Image\r\n                      src={this.state.donneesRecues.photo}\r\n                      rounded\r\n                      width=\"125\"\r\n                    />\r\n                  )}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"descriptionMoto\">\r\n                  <Form.Label>Courte description de la moto</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    defaultValue={\r\n                      this.state.donneesRecues.specifications[0].description\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"prixMoto\">\r\n                  <Form.Label>Prix de la moto</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    defaultValue={\r\n                      this.state.donneesRecues.specifications[1].prix\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={this.handleEdit}\r\n                >\r\n                  Enregistrer\r\n                </Button>\r\n                <p\r\n                  className=\"btn btn-danger ml-3 mt-3\"\r\n                  onClick={this.removeMoto}\r\n                >\r\n                  Supprimer la Moto\r\n                </p>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Accueil } from \"./Accueil\";\n/*import { ManageMotorcycle } from \"./ManageMotorcycle\";*/\nimport { PageNotFound } from \"./PageNotFound\";\nimport { AjouterMoto } from \"./AjouterMoto\";\nimport { BoutonAjouterMoto } from \"./BoutonAjouterMoto\";\nimport { BoutonRetourAccueil } from \"./BoutonRetourAccueil\";\nimport { FormEditMoto } from \"./FormEditMoto\";\nimport {\n  Route,\n  Switch,\n} from \"react-router-dom\"; /*useLocation permet de savoir où je me trouve*/\nimport { useLocation } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nfunction App() {\n  let location = useLocation(); /*variable de la page où je me trouve */\n  return (\n    <>\n      {/*Pour enlever le bouton ajouter dans la page d'ajout, la modification et la page not found */}\n      <ToastContainer autoClose={3000} hideProgressBar />\n      {location.pathname !== \"/ajouterMoto\" &&\n        !location.pathname.startsWith(\"/Motorcycle\") && <BoutonAjouterMoto />}\n      <Switch>\n        <Route path=\"/\" exact component={Accueil} />\n        {/*<Route path=\"Motorcycle/:id\" component={ManageMotorcycle} />*/}\n        {/*Le lien est placé dansle component Motorcycle.js */}\n        <Route path=\"/ajouterMoto\" component={AjouterMoto} />\n        <Route path=\"/Motorcycle/:modele\" component={FormEditMoto} />\n        <Route component={PageNotFound} />\n      </Switch>\n\n      {location.pathname !== \"/\" && <BoutonRetourAccueil />}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}