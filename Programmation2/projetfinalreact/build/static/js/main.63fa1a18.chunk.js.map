{"version":3,"sources":["img/coccinelle.jpg","img/pieds.jpg","img/camion.jpg","components/ScrollReveal.js","components/Accueil.js","constantes.js","components/FormAjouterTrip.js","components/AjouterTrip.js","components/Trip.js","components/BoutonAjoutTrip.js","components/ManageTrips.js","components/FormEditTrip.js","components/BoutonRetourAccueil.js","components/BoutonRetourManage.js","components/DetailTrip.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","ScrollReveal","photos","coccinelle","require","pieds","camion","Accueil","componentDidMount","sr","reveal","refs","box1","origin","duration","delay","distance","scale","easing","box2","Container","fluid","Row","Col","ref","className","to","id","md","left","Image","src","rounded","right","down","React","Component","API","FormAjouterTrip","props","photo1","photo2","photo3","nomTrip","descriptionTrip","nomAttrait","endroit","a","fetch","method","headers","body","JSON","stringify","nom","image1","image2","response","ok","json","jsonResponse","history","push","console","log","Error","Form","Group","controlId","Label","Control","type","Text","as","rows","Button","variant","onClick","event","preventDefault","document","getElementById","value","addTrip","defaultProps","AjouterTrip","Trip","sm","cascade","Card","style","width","Img","picture","Body","Title","nameTrip","nameAttrait","city","BoutonAjouterTrip","ManageTrip","useState","donneesRecues","setDonneesRecues","reponseDeApi","statusText","useEffect","getTrip","map","key","i","attraits","_id","BoutonAjoutTrip","FormEditTrip","image3","description","location","search","substring","length","tripID","picture1","picture2","picture3","nametrip","descriptiontrip","nameactivity","place","getTripInfos","defaultValue","placeholder","photo","editTrip","BoutonRetourAccueil","BoutonRetourManage","DetailTrip","donneesRecuesDetail","setDonneesRecuesDetail","tripDetailID","getInfosDetail","image","Carousel","Item","alt","class","App","useLocation","path","exact","component","ManageTrips","pathname","Boolean","window","hostname","match","ReactDOM","render","basename","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.63fa1a18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coccinelle.5ad5bf0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pieds.c7fe3a9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/camion.30586d39.jpg\";","//Animation JS\r\nimport ScrollReveal from \"scrollreveal\";\r\nexport default ScrollReveal();\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport sr from \"./ScrollReveal\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport \"../style/accueil.sass\"; /*Modifier ce fichier pour le style en sass*/\r\n\r\n//Variables pour téléverser les photos des régions\r\nconst photos = {\r\n  coccinelle: require(\"../img/coccinelle.jpg\"),\r\n  pieds: require(\"../img/pieds.jpg\"),\r\n  camion: require(\"../img/camion.jpg\"),\r\n};\r\n\r\n//Component pour la page d'accueil avec un lien vers manageTrips\r\nexport class Accueil extends React.Component {\r\n  //Pour le titre,\r\n  componentDidMount = () => {\r\n    const config = {\r\n      origin: \"right\",\r\n      duration: 1000,\r\n      delay: 150,\r\n      distance: \"500px\",\r\n      scale: 1,\r\n      easing: \"ease\",\r\n    };\r\n    const config2 = {\r\n      duration: 5000,\r\n      delay: 500,\r\n    };\r\n\r\n    sr.reveal(this.refs.box1, config);\r\n    sr.reveal(this.refs.box2, config2);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <h1 ref=\"box1\" className=\"color\">\r\n              La trotteuse\r\n            </h1>\r\n            <h2 ref=\"box2\">Vous amènera où vous voulez</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Link to={\"/listetrips\"}>Voir tous les road trips...</Link>\r\n          </Col>\r\n        </Row>\r\n        <Container fluid id=\"pageAccueil\">\r\n          <Row className=\"text-center\">\r\n            <Col md={5} className=\"px-0 border border-dark\">\r\n              <Fade left>\r\n                <Image fluid src={photos.coccinelle} rounded />\r\n              </Fade>\r\n            </Col>\r\n            <Col md={2} className=\"px-0 border border-dark\">\r\n              <p>TEXTE</p>\r\n            </Col>\r\n            <Col md={5} className=\"px-0 border border-dark\">\r\n              <Fade right>\r\n                <Image fluid className=\"\" src={photos.camion} rounded />\r\n              </Fade>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={3} className=\"px-0 border border-dark\">\r\n              <p>TEXTE</p>\r\n            </Col>\r\n            <Col md={6} className=\"px-0 border border-dark\">\r\n              <Fade down>\r\n                <Image fluid src={photos.pieds} rounded />\r\n              </Fade>\r\n            </Col>\r\n            <Col md={3} className=\"px-0 border border-dark\">\r\n              <p>TEXTE</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <p>\r\n              \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem\r\n              accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\r\n              quae ab illo inventore veritatis et quasi architecto beatae vitae\r\n              dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\r\n              aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\r\n              eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam\r\n              est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci\r\n              velit, sed quia non numquam eius modi tempora incidunt ut labore\r\n              et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima\r\n              veniam, quis nostrum exercitationem ullam corporis suscipit\r\n              laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem\r\n              vel eum iure reprehenderit qui in ea voluptate velit esse quam\r\n              nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo\r\n              voluptas nulla pariatur?\"\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","export const API =\r\n  \"https://crudcrud.com/api/f00dd6de8e2e40918bd1e7cf612725c1/roadtrips/\";\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Button, Container } from \"react-bootstrap\";\r\n//importer la constante de l'API\r\nimport { API } from \"../constantes\";\r\n//import { toast } from \"react-toastify\";\r\n\r\n//Formulaire d'ajout pour une nouveau road trip\r\nfunction FormAjouterTrip(props) {\r\n  //Hook d'état pour la photo téléchargée voir plus tard, importer {useState}\r\n  //const [photo, setPhoto] = useState(\"\");\r\n\r\n  async function addTrip(\r\n    photo1,\r\n    photo2,\r\n    photo3,\r\n    nomTrip,\r\n    descriptionTrip,\r\n    nomAttrait,\r\n    endroit\r\n  ) {\r\n    try {\r\n      const response = await fetch(API, {\r\n        /*Pour un ajout utiliser la méthode POST */\r\n        method: \"POST\",\r\n        /*Pour un ajout ajouter un headers */\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          nom: nomTrip,\r\n          image1: photo1,\r\n          image2: photo2,\r\n          image2: photo3,\r\n          description: descriptionTrip,\r\n          attraits: [\r\n            {\r\n              nomAttrait: nomAttrait,\r\n            },\r\n            {\r\n              endroit: endroit,\r\n            },\r\n          ],\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        props.history.push(\"/listetrips\"); //Retour à la page d'accueil\r\n        //toast.success(\"Ajout de la moto, modèle:  \" + model);\r\n        console.log(\"ajout du trip réussi\");\r\n\r\n        return jsonResponse;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //Retourne le prochain ID pour savoir où ajouter la nouvel objet\r\n\r\n  function handleAdd(event) {\r\n    event.preventDefault(); /*Empêche de rafraîchir la page, car le bouton est de type submit*/\r\n    /*variables des infos entrées dans le formulaire*/\r\n    const photo1 = document.getElementById(\"urlPhoto1\").value;\r\n    const photo2 = document.getElementById(\"urlPhoto2\").value;\r\n    const photo3 = document.getElementById(\"urlPhoto3\").value;\r\n    const descriptionTrip = document.getElementById(\"descriptionTrip\").value;\r\n    const nomTrip = document.getElementById(\"nomDuTrip\").value;\r\n    const nomAttrait = document.getElementById(\"nomDeLAttrait\").value;\r\n    const endroit = document.getElementById(\"endroitDeLAttrait\").value;\r\n\r\n    /*Fonction pour entrer les infos dans la bd */\r\n    addTrip(\r\n      photo1,\r\n      photo2,\r\n      photo3,\r\n      nomTrip,\r\n      descriptionTrip,\r\n      nomAttrait,\r\n      endroit\r\n    );\r\n  }\r\n\r\n  //Affiche la photo entrer en input, lorsque la souris sort du champ, grâce au changement d'état\r\n  //handlePhoto() {\r\n  // const image = document.getElementById(\"urlPhoto\").value;\r\n  //  this.setState({ photo: image });\r\n  // }\r\n  //Remplacer dans l'événement dans le return avec le hook d'état\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>Formulaire d'enregistrement d'un nouveau road trip</h1>\r\n          <Form>\r\n            <Form.Group controlId=\"urlPhoto1\">\r\n              <Form.Label>Entrer l'url de la première image</Form.Label>\r\n              <Form.Control type=\"text\" />\r\n\r\n              {/*<Form.Control\r\n                onBlur={() =>\r\n                  setPhoto(document.getElementById(\"urlPhoto\").value)\r\n                }\r\n                type=\"text\"\r\n            />\r\n              {photo !== \"\" && <Image src={photo} rounded width=\"125\" />}*/}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"urlPhoto2\">\r\n              <Form.Label>Entrer l'url de la deuxième image</Form.Label>\r\n              <Form.Control type=\"text\" />\r\n\r\n              {/*<Form.Control\r\n                onBlur={() =>\r\n                  setPhoto(document.getElementById(\"urlPhoto\").value)\r\n                }\r\n                type=\"text\"\r\n            />\r\n              {photo !== \"\" && <Image src={photo} rounded width=\"125\" />}*/}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"urlPhoto3\">\r\n              <Form.Label>Entrer l'url de la troisième image</Form.Label>\r\n              <Form.Control type=\"text\" />\r\n\r\n              {/*<Form.Control\r\n                onBlur={() =>\r\n                  setPhoto(document.getElementById(\"urlPhoto\").value)\r\n                }\r\n                type=\"text\"\r\n            />\r\n              {photo !== \"\" && <Image src={photo} rounded width=\"125\" />}*/}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"nomDuTrip\">\r\n              <Form.Label>Entrer le nom du trip</Form.Label>\r\n              <Form.Control type=\"text\" />\r\n              <Form.Text className=\"text-muted\">\r\n                ajouter une validation\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"descriptionTrip\">\r\n              <Form.Label>Description du road trip</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"3\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"nomDeLAttrait\">\r\n              <Form.Label>Entrer le nom de l'attrait principal</Form.Label>\r\n              <Form.Control type=\"text\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"endroitDeLAttrait\">\r\n              <Form.Label>Endroit</Form.Label>\r\n              <Form.Control type=\"text\" />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleAdd}>\r\n              Ajouter un Road trip\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nFormAjouterTrip.defaultProps = { history: \"/listetrips\" };\r\nexport default FormAjouterTrip;\r\n","import React from \"react\";\r\nimport FormAjouterTrip from \"./FormAjouterTrip\";\r\n//Dans ce cas il n'y a pas d'état ou d'appel au serveur, pas useState  et de useEffect\r\n//Remplacer la class par la function\r\n//Mettre le mot props en paramètre\r\n//aller chercher le props = props.history, le defaultProps n'a pas besoin du props.\r\n//history={props.history}\r\nfunction AjouterTrip(props) {\r\n  return (\r\n    <>\r\n      <FormAjouterTrip history={props.history} />\r\n    </>\r\n  );\r\n}\r\n\r\nAjouterTrip.defaultProps = { history: \"/listetrips\" };\r\nexport default AjouterTrip;\r\n","import React from \"react\";\r\nimport { Col, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\n//Component pour l'affichage des motos dans des cards\r\nfunction Trip(props) {\r\n  return (\r\n    <Col sm={3} className=\"mt-5\">\r\n      <Fade left cascade>\r\n        <Card style={{ width: \"28rem\" }}>\r\n          <Card.Img variant=\"top\" src={props.picture} />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              <Link to={\"trip/\" + props.nameTrip + \"?id=\" + props.id}>\r\n                <h2>{props.nameTrip}</h2>\r\n              </Link>\r\n            </Card.Title>\r\n            <Card.Text>attrait principal: {props.nameAttrait}</Card.Text>\r\n            <Card.Text>endroit: {props.city}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Fade>\r\n    </Col>\r\n  );\r\n}\r\nexport default Trip;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nfunction BoutonAjouterTrip() {\r\n  return (\r\n    <Row>\r\n      <Col className=\"text-right\">\r\n        <Link to=\"/ajoutertrip\" className=\"btn btn-primary\">\r\n          Ajouter un Road Trip\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n//Il faut exporter les fonctions\r\nexport default BoutonAjouterTrip;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Trip from \"./Trip\";\r\nimport BoutonAjoutTrip from \"./BoutonAjoutTrip\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { API } from \"../constantes\";\r\n\r\n//Remplacer la class par une fonction\r\n//L'état(donneesRecues) et la méthode pour changer l'état(setDonneesRecues)\r\n//La valeur par défaut est dans le useState(un tableau vide)\r\nfunction ManageTrip() {\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n\r\n  //Pour le CRUD utiliser useEffect\r\n  useEffect(() => {\r\n    //appelle la fonction getMotorcycles\r\n    getTrip();\r\n  }, []); //Si on enlève le second paramètre, on obtient une boucle infinie, indique quelle constante à vérifier\r\n  //Changer le componentDidMount par une fonction\r\n  async function getTrip() {\r\n    try {\r\n      const response = await fetch(API);\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Affichage de la liste des road trips</h1>\r\n\r\n      <Row>\r\n        {donneesRecues.map((key, i) => (\r\n          <Trip\r\n            picture={key.image1}\r\n            nameTrip={key.nom}\r\n            nameAttrait={key.attraits[0].nomAttrait}\r\n            city={key.attraits[1].endroit}\r\n            id={key._id}\r\n          ></Trip>\r\n        ))}\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <BoutonAjoutTrip />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n//Il faut exporter les fonctions\r\nexport default ManageTrip;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Image, Container, Row, Col } from \"react-bootstrap\";\r\nimport { API } from \"../constantes\";\r\n\r\n//import { toast } from \"react-toastify\";\r\n\r\nfunction FormEditTrip(props) {\r\n  const [donneesRecues, setDonneesRecues] = useState({\r\n    nom: \"\",\r\n    image1: \"\",\r\n    image2: \"\",\r\n    image3: \"\",\r\n    description: \"\",\r\n    attraits: [\"\", \"\"],\r\n  });\r\n\r\n  const [tripID, setTripID] = useState(\r\n    props.location.search.substring(4, props.location.search.length)\r\n  );\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    getTripInfos();\r\n  }, []);\r\n  //On récupère la moto pour ensuite remplir le formulaire.Pour le hook renommer getMoto\r\n  async function getTripInfos() {\r\n    //On récupère le dernier caractère de l'url substring(4,fin du string)\r\n    //*********Le state motoID, n'est pas déclaré au début de la fonction ou classe************ */\r\n    try {\r\n      const response = await fetch(API + tripID);\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  //editTrip(picture, nametrip, nameactivity, place);\r\n  //Méthode pour modifier la bd avec le formulaire, semblable à l'ajout ajouter l'id à l'URL et changer la methode pour PUT\r\n  async function editTrip(\r\n    picture1,\r\n    picture2,\r\n    picture3,\r\n    nametrip,\r\n    descriptiontrip,\r\n    nameactivity,\r\n    place\r\n  ) {\r\n    try {\r\n      const response = await fetch(API + tripID, {\r\n        /*Pour un ajout utiliser la méthode POST */\r\n        method: \"PUT\",\r\n        /*Pour un ajout ajouter un headers */\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n\r\n        body: JSON.stringify({\r\n          nom: nametrip,\r\n          image1: picture1,\r\n          image2: picture2,\r\n          image3: picture3,\r\n          description: descriptiontrip,\r\n          attraits: [\r\n            {\r\n              nomAttrait: nameactivity,\r\n            },\r\n            {\r\n              endroit: place,\r\n            },\r\n          ],\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        //const jsonResponse = await response.json();\r\n        props.history.push(\r\n          \"/listetrips/\" + donneesRecues.nom + \"?id=\" + donneesRecues._id\r\n        ); //Retour à la page d'accueil\r\n        //toast.warning(\"Modification de la moto, modèle:  \" + model);\r\n\r\n        return response;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function handleEdit(event) {\r\n    event.preventDefault(); /*Empêche de rafraîchir la page, car le bouton est de type submit*/\r\n    /*variables des infos entrées dans le formulaire*/\r\n    const picture1 = document.getElementById(\"pictureID1\").value;\r\n    const picture2 = document.getElementById(\"pictureID2\").value;\r\n    const picture3 = document.getElementById(\"pictureID3\").value;\r\n    const nametrip = document.getElementById(\"nametripID\").value;\r\n    const descriptiontrip = document.getElementById(\"descriptionTripID\").value;\r\n    const nameactivity = document.getElementById(\"nameactivityID\").value;\r\n    const place = document.getElementById(\"placeID\").value;\r\n\r\n    /*Fonction pour entrer les infos dans la bd */\r\n    editTrip(\r\n      picture1,\r\n      picture2,\r\n      picture3,\r\n      nametrip,\r\n      descriptiontrip,\r\n      nameactivity,\r\n      place\r\n    );\r\n  }\r\n  //Méthode pour supprimer le road trip  de la bd, method delete\r\n  async function removeTrip() {\r\n    try {\r\n      const response = await fetch(API + tripID, {\r\n        method: \"delete\",\r\n      });\r\n\r\n      if (response.ok) {\r\n        //const jsonResponse = await response.json();\r\n\r\n        console.log(\"SUPPRESSION!\");\r\n\r\n        props.history.push(\"/listetrips\");\r\n\r\n        //toast.error(\"Supression de la moto \");\r\n\r\n        return response;\r\n      }\r\n\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Méthode sur événement onBlur, si une image est changé elle s'affichera lorsque l'on sort du champ\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group controlId=\"nametripID\">\r\n                <Form.Label>Titre du road trip</Form.Label>\r\n                <Form.Control type=\"text\" defaultValue={donneesRecues.nom} />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"pictureID1\">\r\n                <Form.Label>Image 1</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Entrer une URL valide\"\r\n                  defaultValue={donneesRecues.image1}\r\n                />\r\n                {donneesRecues.photo !== \"\" && (\r\n                  <Image src={donneesRecues.image1} rounded width=\"125\" />\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"pictureID2\">\r\n                <Form.Label>Image 2</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Entrer une URL valide\"\r\n                  defaultValue={donneesRecues.image2}\r\n                />\r\n                {donneesRecues.photo !== \"\" && (\r\n                  <Image src={donneesRecues.image2} rounded width=\"125\" />\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"pictureID3\">\r\n                <Form.Label>Image 3</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Entrer une URL valide\"\r\n                  defaultValue={donneesRecues.image3}\r\n                />\r\n                {donneesRecues.photo !== \"\" && (\r\n                  <Image src={donneesRecues.image3} rounded width=\"125\" />\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"descriptionTripID\">\r\n                <Form.Label>Description du road trip</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"3\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"nameactivityID\">\r\n                <Form.Label>Attrait principal</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={donneesRecues.attraits[0].nomAttrait}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"placeID\">\r\n                <Form.Label>endroit</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={donneesRecues.attraits[1].endroit}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\" onClick={handleEdit}>\r\n                Enregistrer\r\n              </Button>\r\n              <p className=\"btn btn-danger ml-3 mt-3\" onClick={removeTrip}>\r\n                Supprimer le road trip\r\n              </p>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nFormEditTrip.defaultProps = { history: \"/listetrips\" };\r\nexport default FormEditTrip;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nfunction BoutonRetourAccueil() {\r\n  return (\r\n    <Row>\r\n      <Col className=\"text-right\">\r\n        <Link to=\"/\" className=\"btn btn-primary\">\r\n          Retour à l'accueil\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\nexport default BoutonRetourAccueil;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nfunction BoutonRetourManage() {\r\n  return (\r\n    <Row>\r\n      <Col className=\"text-right\">\r\n        <Link to=\"/listetrips\" className=\"btn btn-primary\">\r\n          Retour à la liste des road trips\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\nexport default BoutonRetourManage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Image, Carousel } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { API } from \"../constantes\";\r\nimport \"../style/test.sass\"; /*Modifier ce fichier pour le style en sass*/\r\n\r\n//Fonction pour afficher les détails du road trip\r\nfunction DetailTrip(props) {\r\n  //Constantes en useState pour les infos et l'id\r\n  const [donneesRecuesDetail, setDonneesRecuesDetail] = useState({\r\n    _id: \"\",\r\n    nom: \"\",\r\n    image1: \"\",\r\n    image2: \"\",\r\n    image3: \"\",\r\n    description: \"\",\r\n    attraits: [\"\", \"\"],\r\n  });\r\n\r\n  const [tripDetailID, setTripDetailID] = useState(\r\n    props.location.search.substring(4, props.location.search.length)\r\n  );\r\n  //Appel à l'API, pour obtenir les données du road trip à partir de l'id\r\n  useEffect(() => {\r\n    getInfosDetail();\r\n  }, []);\r\n  //On récupère la moto pour ensuite remplir le formulaire.Pour le hook renommer getMoto\r\n  async function getInfosDetail() {\r\n    //On récupère le dernier caractère de l'url substring(4,fin du string)\r\n    //*********Le state motoID, n'est pas déclaré au début de la fonction ou classe************ */\r\n    try {\r\n      const response = await fetch(API + tripDetailID);\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecuesDetail(reponseDeApi);\r\n\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <h1>Affichage détaillée du road trip</h1>\r\n      <Row>\r\n        {/* Carousselle d'images */}\r\n        <Col className=\"h-50\" sm={12}>\r\n          <Image src={donneesRecuesDetail.image} />\r\n          <Carousel id=\"myCarousel\">\r\n            <Carousel.Item>\r\n              <Image\r\n                className=\"d-block w-100\"\r\n                src={donneesRecuesDetail.image1}\r\n                alt=\"First slide\"\r\n              />\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <Image\r\n                className=\"d-block w-100\"\r\n                src={donneesRecuesDetail.image2}\r\n                alt=\"Third slide\"\r\n              />\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <Image\r\n                className=\"d-block w-100\"\r\n                src={donneesRecuesDetail.image3}\r\n                alt=\"Third slide\"\r\n              />\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {/* titre*/}\r\n        <Col class sm={12}>\r\n          <Link\r\n            to={\r\n              \"edit/\" +\r\n              donneesRecuesDetail.nom +\r\n              \"?id=\" +\r\n              donneesRecuesDetail._id\r\n            }\r\n          >\r\n            <h2>Nom du road trip: {donneesRecuesDetail.nom}</h2>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {/* description*/}\r\n        <Col class sm={12}>\r\n          <p>{donneesRecuesDetail.description}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {/* titre*/}\r\n        <Col class sm={12}>\r\n          <h1>{donneesRecuesDetail.attraits[0].nomAttrait}</h1>\r\n          <h1>{donneesRecuesDetail.attraits[1].endroit}</h1>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n//Il faut exporter les fonctions\r\nexport default DetailTrip;\r\n","import React from \"react\";\r\nimport \"../style/App.css\"; /*Modifier ce fichier pour le style en sass*/\r\nimport { Accueil } from \"./Accueil\";\r\nimport AjouterTrip from \"./AjouterTrip\";\r\nimport ManageTrips from \"./ManageTrips\";\r\nimport FormEditTrip from \"./FormEditTrip\";\r\nimport BoutonRetourAccueil from \"./BoutonRetourAccueil\";\r\nimport BoutonRetourManage from \"./BoutonRetourManage\";\r\nimport { useLocation, Route, Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport DetailTrip from \"./DetailTrip\";\r\n\r\nfunction App() {\r\n  let location = useLocation(); /*variable de la page où je me trouve */\r\n  return (\r\n    <>\r\n      {/*Pour enlever le bouton ajouter dans la page d'ajout, la modification et la page not found\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      */}\r\n      <Container fluid>\r\n        <Switch>\r\n          {/*Accueil est la première page*/}\r\n          <Route path=\"/\" exact component={Accueil} />\r\n          {/*Dans la page d'accueil, lien pour la liste des road trips*/}\r\n          {/*Dans la liste des trips, bouton pour ajouter un trip*/}\r\n          <Route path=\"/listetrips\" component={ManageTrips} />\r\n          <Route path=\"/ajoutertrip\" component={AjouterTrip} />\r\n          {/*Un lien dans chacune des cards des différents trips, amène à un formulaire d'édition*/}\r\n          <Route path=\"/trip/edit/:titre\" component={FormEditTrip} />\r\n          {/*Un lien dans chacune des cards des différents trips, amène à page détaillée du road trip*/}\r\n          <Route path=\"/trip/:titre\" component={DetailTrip} />\r\n          {/*En cas d'erreur dans l'url une page 404 s'affiche\r\n          <Route component={PageNotFoundHook} />*/}\r\n        </Switch>\r\n      </Container>\r\n\r\n      {location.pathname !== \"/\" && <BoutonRetourAccueil />}\r\n      {location.pathname !== \"trip/\" &&\r\n        location.pathname !== \"/\" &&\r\n        location.pathname !== \"/listetrips\" && <BoutonRetourManage />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router basename=\"/AEC_Front_End/Programmation2/projetfinalreact/build\">\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}