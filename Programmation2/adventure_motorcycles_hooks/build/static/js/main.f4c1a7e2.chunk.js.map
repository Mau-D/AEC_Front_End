{"version":3,"sources":["img/404motorcycle.png","Components/MotorcycleHook.js","Components/ManageMotorcycleHook.js","Components/AccueilHook.js","Components/PageNotFoundHook.js","Components/FormAjouterMotoHook.js","Components/AjouterMotoHook.js","Components/BoutonAjouterMotoHook.js","Components/BoutonRetourAccueilHook.js","Components/FormEditMotoHook.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","MotorcycleHook","props","Col","sm","className","left","cascade","Card","style","width","Img","variant","src","photo","Body","Title","to","model","id","Subtitle","factory","Text","description","prix","ManageMotorcycleHook","useState","donneesRecues","setDonneesRecues","a","fetch","response","json","reponseDeApi","ok","Error","statusText","console","log","useEffect","getMotorcycles","ScrollReveal","reveal","delay","duration","Container","fluid","class","Row","map","key","i","modele","fabricant","specifications","Accueil","PageNotFoundHook","Image","require","alt","FormAjouterMotoHook","setPhoto","picture","manufacturer","comments","price","getID","newID","method","headers","body","JSON","stringify","jsonResponse","history","push","toast","success","nextID","length","Form","Group","controlId","Label","Control","onBlur","document","getElementById","value","type","rounded","placeholder","Button","onClick","event","preventDefault","addMoto","defaultProps","AjouterMotoHook","BoutonAjouterMotoHook","BoutonRetourAccueilHook","FormEditMotoHook","location","search","substring","motoID","this","state","warning","error","getMoto","defaultValue","editMoto","App","useLocation","autoClose","hideProgressBar","pathname","startsWith","path","exact","component","AccueilHook","Boolean","window","hostname","match","ReactDOM","render","basename","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"uLAAAA,EAAOC,QAAU,IAA0B,2C,kMC6B5BC,MAvBf,SAAwBC,GACtB,OACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,UAAU,QACpB,kBAAC,IAAD,CAAMC,MAAI,EAACC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,UACpB,kBAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKX,EAAMY,QACnC,kBAACN,EAAA,EAAKO,KAAN,KACE,kBAACP,EAAA,EAAKQ,MAAN,KACE,kBAAC,IAAD,CAAMC,GAAI,cAAgBf,EAAMgB,MAAQ,OAAShB,EAAMiB,IACrD,4BAAKjB,EAAMgB,SAGf,kBAACV,EAAA,EAAKY,SAAN,CAAef,UAAU,mBACtBH,EAAMmB,SAET,kBAACb,EAAA,EAAKc,KAAN,KAAYpB,EAAMqB,aAClB,kBAACf,EAAA,EAAKc,KAAN,KAAYpB,EAAMsB,W,QCyCfC,MAvDf,WAAiC,IAAD,EACYC,mBAAS,IADrB,mBACvBC,EADuB,KACRC,EADQ,iDAS9B,8BAAAC,EAAA,+EAE2BC,MACrB,8CAHN,cAEUC,EAFV,gBAK+BA,EAASC,OALxC,UAKUC,EALV,OAMIL,EAAiBK,GACZF,EAASG,GAPlB,uBASYC,MAAMJ,EAASK,YAT3B,0DAaIC,QAAQC,IAAR,MAbJ,2DAT8B,sBA8B9B,OA1BAC,qBAAU,YAJoB,mCAM5BC,KACCb,GAkBHc,cAAeC,OAAO,aACtBD,cAAeC,OAAO,WAAY,CAAEC,MAAO,MAC3CF,YAAa,CAAEG,SAAU,MACzBH,cAAeC,OAAO,aAAc,CAAEC,MAAO,MAG3C,kBAACE,EAAA,EAAD,CAAWC,OAAK,GACd,wBAAIzC,UAAU,YAAd,mCACA,uBAAG0C,MAAM,WAAT,uBAEE,0BAAM1C,UAAU,aAAhB,aAEF,+DACA,kBAAC2C,EAAA,EAAD,KACGrB,EAAcsB,KAAI,SAACC,EAAKC,GAAN,OACjB,kBAAC,EAAD,CACErC,MAAOoC,EAAIpC,MACXI,MAAOgC,EAAIE,OACX/B,QAAS6B,EAAIG,UACbH,IAAKA,EAAIE,OAASF,EAAI/B,GACtBI,YAAa2B,EAAII,eAAe,GAAG/B,YACnCC,KAAM0B,EAAII,eAAe,GAAG9B,KAC5BL,GAAI+B,EAAI/B,WCvCLoC,MAXf,WACE,OACE,kBAACV,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACE,EAAA,EAAD,CAAK3C,UAAU,eACb,kBAACF,EAAA,EAAD,KACE,kBAAC,EAAD,U,QCSKqD,MAff,WACE,OACE,kBAACR,EAAA,EAAD,CAAK3C,UAAU,eACb,kBAACF,EAAA,EAAD,KACE,gDACA,kBAACsD,EAAA,EAAD,CACEpD,UAAU,iBACVQ,IAAK6C,EAAQ,IACbC,IAAI,gCAEN,yF,wBCTR,SAASC,EAAoB1D,GAAO,MAERwB,mBAAS,IAFD,mBAE3BZ,EAF2B,KAEpB+C,EAFoB,iDAIlC,WAAuBC,EAAS5C,EAAO6C,EAAcC,EAAUC,GAA/D,mBAAApC,EAAA,+EAEwBqC,IAFxB,cAEUC,EAFV,gBAG2BrC,MACrB,8CACA,CAEEsC,OAAQ,OAERC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBrD,GAAIgD,EACJf,OAAQlC,EACRmC,UAAWU,EACXjD,MAAOgD,EACPR,eAAgB,CACd,CACE/B,YAAayC,GAEf,CACExC,KAAMyC,QAtBpB,YAGUlC,EAHV,QA4BiBG,GA5BjB,kCA6BiCH,EAASC,OA7B1C,eA6BYyC,EA7BZ,OA8BMvE,EAAMwE,QAAQC,KAAK,KACnBC,IAAMC,QAAQ,iCAAgC3D,GA/BpD,kBAiCauD,GAjCb,cAmCU,IAAItC,MAAM,mBAnCpB,kCAqCIE,QAAQC,IAAR,MArCJ,2DAJkC,+BA8CnB4B,IA9CmB,2EA8ClC,kCAAArC,EAAA,sEAEQiD,EAAS,EAFjB,SAG2BhD,MACrB,+CAJN,cAGUC,EAHV,gBAM+BA,EAASC,OANxC,OAOI,IADMC,EANV,OAOakB,EAAI,EAAGA,EAAIlB,EAAa8C,OAAQ5B,IACnClB,EAAakB,GAAGhC,GAAK2D,IACvBA,EAAS7C,EAAakB,GAAGhC,IATjC,GAYSY,EAASG,GAZlB,uBAaYC,MAAMJ,EAASK,YAb3B,iCAeW0C,EAAS,GAfpB,kCAiBIzC,QAAQC,IAAR,MAjBJ,2DA9CkC,sBAuFlC,OACE,kBAACO,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,KACE,+EACA,kBAAC6E,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,MAAN,gCACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,OAAQ,kBACNxB,EAASyB,SAASC,eAAe,YAAYC,QAE/CC,KAAK,SAEI,KAAV3E,GAAgB,kBAAC2C,EAAA,EAAD,CAAO5C,IAAKC,EAAO4E,SAAO,EAAChF,MAAM,SAEpD,kBAACsE,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,MAAN,uCACA,kBAACH,EAAA,EAAKI,QAAN,CACEK,KAAK,OACLE,YAAY,6BAEd,kBAACX,EAAA,EAAK1D,KAAN,CAAWjB,UAAU,cAArB,2BAIF,kBAAC2E,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBACpB,kBAACF,EAAA,EAAKG,MAAN,mCACA,kBAACH,EAAA,EAAKI,QAAN,CAAcK,KAAK,OAAOE,YAAY,kBAExC,kBAACX,EAAA,EAAK1D,KAAN,CAAWjB,UAAU,cAArB,8BAGA,kBAAC2E,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBACpB,kBAACF,EAAA,EAAKG,MAAN,+BACA,kBAACH,EAAA,EAAKI,QAAN,CAAcK,KAAK,UAErB,kBAACT,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACF,EAAA,EAAKG,MAAN,kCACA,kBAACH,EAAA,EAAKI,QAAN,CAAcK,KAAK,UAErB,kBAACG,EAAA,EAAD,CAAQhF,QAAQ,UAAU6E,KAAK,SAASI,QA7DlD,SAAmBC,GACjBA,EAAMC,iBApE0B,4CA6EhCC,CAPgBV,SAASC,eAAe,YAAYC,MACtCF,SAASC,eAAe,aAAaC,MAC9BF,SAASC,eAAe,gBAAgBC,MAC5CF,SAASC,eAAe,oBAAoBC,MAC/CF,SAASC,eAAe,cAAcC,SAsD5C,wBASZ5B,EAAoBqC,aAAe,CAAEvB,QAAS,KAC/Bd,QCzIf,SAASsC,EAAgBhG,GACvB,OACE,oCACE,kBAAC,EAAD,CAAqBwE,QAASxE,EAAMwE,WAI1CwB,EAAgBD,aAAe,CAAEvB,QAAS,KAC3BwB,QCGAC,MAZf,WACE,OACE,kBAACnD,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CAAKE,UAAU,cACb,kBAAC,IAAD,CAAMY,GAAG,eAAeZ,UAAU,mBAAlC,uBCOO+F,MAXf,WACE,OACE,kBAACpD,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CAAKE,UAAU,cACb,kBAAC,IAAD,CAAMY,GAAG,IAAIZ,UAAU,mBAAvB,4BC+KOgG,MApLf,SAA0BnG,GAAQ,IAAD,EACWwB,mBAAS,CACjD0B,OAAQ,GACRC,UAAW,GACXvC,MAAO,GACPwC,eAAgB,CAAC,GAAI,MALQ,mBACxB3B,EADwB,KACTC,EADS,OAQHF,mBAC1BxB,EAAMoG,SAASC,OAAOC,UAAU,EAAGtG,EAAMoG,SAASC,OAAOxB,SAT5B,mBAQxB0B,EARwB,iDAiB/B,8BAAA5E,EAAA,+EAIUQ,QAAQC,IAAImE,GAJtB,uBAK2B3E,MACrB,8CAAgD2E,GANtD,cAKU1E,EALV,gBAQ+BA,EAASC,OARxC,UAQUC,EARV,OASIL,EAAiBK,GACjBI,QAAQC,IAAIoE,KAAKC,MAAMhF,eAClBI,EAASG,GAXlB,uBAYYC,MAAMJ,EAASK,YAZ3B,0DAeIC,QAAQC,IAAR,MAfJ,2DAjB+B,kEAoC/B,WAAwBwB,EAAS5C,EAAO6C,EAAcC,EAAUC,GAAhE,iBAAApC,EAAA,+EAE2BC,MACrB,8CAAgD2E,EAChD,CAEErC,OAAQ,MAERC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBrD,GAAIsF,EACJrD,OAAQlC,EACRmC,UAAWU,EACXjD,MAAOgD,EACPR,eAAgB,CACd,CACE/B,YAAayC,GAEf,CACExC,KAAMyC,QArBpB,YAEUlC,EAFV,QA2BiBG,GA3BjB,iCA4BiCH,EAASC,OA5B1C,cA4BYyC,EA5BZ,OA6BMvE,EAAMwE,QAAQC,KAAK,KACnBC,IAAMgC,QAAQ,wCAAuC1F,GA9B3D,kBAgCauD,GAhCb,cAkCU,IAAItC,MAAM,mBAlCpB,kCAoCIE,QAAQC,IAAR,MApCJ,2DApC+B,kEAyF/B,8BAAAT,EAAA,+EAE2BC,MACrB,8CAAgD2E,EAChD,CACErC,OAAQ,WALhB,YAEUrC,EAFV,QASiBG,GATjB,iCAUiCH,EAASC,OAV1C,cAUYyC,EAVZ,OAYMpC,QAAQC,IAAI,gBAEZpC,EAAMwE,QAAQC,KAAK,KAEnBC,IAAMiC,MAAM,0BAhBlB,kBAkBapC,GAlBb,cAqBU,IAAItC,MAAM,mBArBpB,kCAuBIE,QAAQC,IAAR,MAvBJ,2DAzF+B,sBAsH/B,OAtH+B,KAa/BC,qBAAU,YAbqB,mCAc7BuE,KACC,IAsGHzE,QAAQC,IAAIX,EAAcb,OAExB,oCACE,kBAAC+B,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,KACE,kBAAC6E,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACF,EAAA,EAAKG,MAAN,6BACA,kBAACH,EAAA,EAAKI,QAAN,CAAcK,KAAK,OAAOsB,aAAcpF,EAAcyB,UAExD,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBACpB,kBAACF,EAAA,EAAKG,MAAN,6BACA,kBAACH,EAAA,EAAKI,QAAN,CACEK,KAAK,OACLsB,aAAcpF,EAAc0B,aAGhC,kBAAC2B,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,MAAN,mCACA,kBAACH,EAAA,EAAKI,QAAN,CACEK,KAAK,OACLE,YAAY,wBACZN,OAAQ,kBACNzD,EAAiBd,MACfwE,SAASC,eAAe,aAAaC,QAGzCuB,aAAcpF,EAAcb,QAEL,KAAxBa,EAAcb,OACb,kBAAC2C,EAAA,EAAD,CAAO5C,IAAKc,EAAcb,MAAO4E,SAAO,EAAChF,MAAM,SAInD,kBAACsE,EAAA,EAAKC,MAAN,CAAYC,UAAU,mBACpB,kBAACF,EAAA,EAAKG,MAAN,sCACA,kBAACH,EAAA,EAAKI,QAAN,CACEK,KAAK,OACLsB,aAAcpF,EAAc2B,eAAe,GAAG/B,eAGlD,kBAACyD,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,MAAN,wBACA,kBAACH,EAAA,EAAKI,QAAN,CACEK,KAAK,OACLsB,aAAcpF,EAAc2B,eAAe,GAAG9B,QAIlD,kBAACoE,EAAA,EAAD,CAAQhF,QAAQ,UAAU6E,KAAK,SAASI,QA3FpD,SAAoBC,GAClBA,EAAMC,iBA7EuB,4CAsF7BiB,CAPgB1B,SAASC,eAAe,aAAaC,MACvCF,SAASC,eAAe,cAAcC,MAC/BF,SAASC,eAAe,iBAAiBC,MAC7CF,SAASC,eAAe,mBAAmBC,MAC9CF,SAASC,eAAe,YAAYC,SAoFxC,eAGA,uBAAGnF,UAAU,2BAA2BwF,QA1KrB,4CA0KnB,2B,mBCtICoB,MAxBf,WACE,IAAIX,EAAWY,cACf,OACE,oCAEE,kBAAC,IAAD,CAAgBC,UAAW,IAAMC,iBAAe,IACzB,iBAAtBd,EAASe,WACPf,EAASe,SAASC,WAAW,gBAC5B,kBAAC,EAAD,MAEJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IAGjC,kBAAC,IAAD,CAAOH,KAAK,eAAeE,UAAWvB,IACtC,kBAAC,IAAD,CAAOqB,KAAK,sBAAsBE,UAAWpB,IAC7C,kBAAC,IAAD,CAAOoB,UAAWjE,KAGG,MAAtB8C,EAASe,UAAoB,kBAAC,EAAD,QCvBhBM,QACW,cAA7BC,OAAOtB,SAASuB,UAEe,UAA7BD,OAAOtB,SAASuB,UAEhBD,OAAOtB,SAASuB,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAD,CAAQC,SAAS,mEACf,kBAAC,EAAD,OAEF3C,SAASC,eAAe,SDuHpB,kBAAmB2C,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3B,GACLxE,QAAQwE,MAAMA,EAAM4B,c","file":"static/js/main.f4c1a7e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404motorcycle.3e78af66.png\";","import React from \"react\";\r\nimport { Col, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\n//Component pour l'affichage des motos dans des cards\r\nfunction MotorcycleHook(props) {\r\n  return (\r\n    <Col sm={3} className=\"mt-5\">\r\n      <Fade left cascade>\r\n        <Card style={{ width: \"28rem\" }}>\r\n          <Card.Img variant=\"top\" src={props.photo} />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              <Link to={\"Motorcycle/\" + props.model + \"?id=\" + props.id}>\r\n                <h2>{props.model}</h2>\r\n              </Link>\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              {props.factory}\r\n            </Card.Subtitle>\r\n            <Card.Text>{props.description}</Card.Text>\r\n            <Card.Text>{props.prix}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Fade>\r\n    </Col>\r\n  );\r\n}\r\nexport default MotorcycleHook;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MotorcycleHook from \"./MotorcycleHook\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport ScrollReveal from \"scrollreveal\";\r\n\r\n//Remplacer la class par une fonction\r\n//L'état(donneesRecues) et la méthode pour changer l'état(setDonneesRecues)\r\n//La valeur par défaut est dans le useState(un tableau vide)\r\nfunction ManageMotorcycleHook() {\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n\r\n  //Pour le CRUD utiliser useEffect\r\n  useEffect(() => {\r\n    //appelle la fonction getMotorcycles\r\n    getMotorcycles();\r\n  }, donneesRecues); //Si on enlève le second paramètre, on obtient une boucle infinie, indique quelle constante à vérifier\r\n  //Changer le componentDidMount par une fonction\r\n  async function getMotorcycles() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles\"\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n  ScrollReveal().reveal(\".headline\");\r\n  ScrollReveal().reveal(\".tagline\", { delay: 500 });\r\n  ScrollReveal({ duration: 5000 });\r\n  ScrollReveal().reveal(\".punchline\", { delay: 2000 });\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1 className=\"headline\">Affichage de la liste des motos</h1>\r\n      <p class=\"tagline\">\r\n        The perfect widgets.\r\n        <span className=\"punchline\">Forever.</span>\r\n      </p>\r\n      <h1>Affichage de la liste des motos</h1>\r\n      <Row>\r\n        {donneesRecues.map((key, i) => (\r\n          <MotorcycleHook\r\n            photo={key.photo}\r\n            model={key.modele}\r\n            factory={key.fabricant}\r\n            key={key.modele + key.id}\r\n            description={key.specifications[0].description}\r\n            prix={key.specifications[1].prix}\r\n            id={key.id}\r\n          ></MotorcycleHook>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n//Il faut exporter les fonctions\r\nexport default ManageMotorcycleHook;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ManageMotorcycleHook from \"./ManageMotorcycleHook\";\r\n\r\n//Component pour la structure du site et le lien vers manage de la bd\r\nfunction Accueil() {\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"text-center\">\r\n        <Col>\r\n          <ManageMotorcycleHook />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default Accueil;\r\n","import React from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nfunction PageNotFoundHook() {\r\n  return (\r\n    <Row className=\"text-center\">\r\n      <Col>\r\n        <h1>Page introuvable</h1>\r\n        <Image\r\n          className=\"d-inline-block\"\r\n          src={require(\"../img/404motorcycle.png\")}\r\n          alt=\"Page introuvable erreur 404\"\r\n        />\r\n        <p>Nous serons bientôt là...revenez un peu plus tard</p>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\nexport default PageNotFoundHook;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Button, Image, Container } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//Formulaire d'ajout pour une nouvelle moto\r\nfunction FormAjouterMotoHook(props) {\r\n  //Hook d'état pour la photo téléchargée\r\n  const [photo, setPhoto] = useState(\"\");\r\n\r\n  async function addMoto(picture, model, manufacturer, comments, price) {\r\n    try {\r\n      const newID = await getID(); /*Fonction pour obtenir le dernier id de la bd */\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\",\r\n        {\r\n          /*Pour un ajout utiliser la méthode POST */\r\n          method: \"POST\",\r\n          /*Pour un ajout ajouter un headers */\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: newID,\r\n            modele: model,\r\n            fabricant: manufacturer,\r\n            photo: picture,\r\n            specifications: [\r\n              {\r\n                description: comments,\r\n              },\r\n              {\r\n                prix: price,\r\n              },\r\n            ],\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        props.history.push(\"/\"); //Retour à la page d'accueil\r\n        toast.success(\"Ajout de la moto, modèle:  \" + model);\r\n\r\n        return jsonResponse;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //Retourne le prochain ID pour savoir où ajouter la nouvel objet\r\n  async function getID() {\r\n    try {\r\n      let nextID = 0;\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\"\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      for (let i = 0; i < reponseDeApi.length; i++) {\r\n        if (reponseDeApi[i].id > nextID) {\r\n          nextID = reponseDeApi[i].id;\r\n        }\r\n      }\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return nextID + 1;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function handleAdd(event) {\r\n    event.preventDefault(); /*Empêche de rafraîchir la page, car le bouton est de type submit*/\r\n    /*variables des infos entrées dans le formulaire*/\r\n    const picture = document.getElementById(\"urlPhoto\").value;\r\n    const model = document.getElementById(\"nomModele\").value;\r\n    const manufacturer = document.getElementById(\"nomFabricant\").value;\r\n    const comments = document.getElementById(\"texteDescription\").value;\r\n    const price = document.getElementById(\"valeurPrix\").value;\r\n\r\n    /*Fonction pour entrer les infos dans la bd */\r\n    addMoto(picture, model, manufacturer, comments, price);\r\n  }\r\n\r\n  //Affiche la photo entrer en input, lorsque la souris sort du champ, grâce au changement d'état\r\n  //handlePhoto() {\r\n  // const image = document.getElementById(\"urlPhoto\").value;\r\n  //  this.setState({ photo: image });\r\n  // }\r\n  //Remplacer dans l'événement dans le return avec le hook d'état\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>Formulaire d'enregistrement d'une nouvelle moto</h1>\r\n          <Form>\r\n            <Form.Group controlId=\"urlPhoto\">\r\n              <Form.Label>Entrer l'url de l'image</Form.Label>\r\n              <Form.Control\r\n                onBlur={() =>\r\n                  setPhoto(document.getElementById(\"urlPhoto\").value)\r\n                }\r\n                type=\"text\"\r\n              />\r\n              {photo !== \"\" && <Image src={photo} rounded width=\"125\" />}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"nomModele\">\r\n              <Form.Label>Entrer le modèle de la moto</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"exemple: 790 ADVENTURE R\"\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                ajouter une validation\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"nomFabricant\">\r\n              <Form.Label>Entrer le nom du fabricant</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"exemple: KTM\" />\r\n            </Form.Group>\r\n            <Form.Text className=\"text-muted\">\r\n              Faire un menu déroulant\r\n            </Form.Text>\r\n            <Form.Group controlId=\"texteDescription\">\r\n              <Form.Label>Description de la moto</Form.Label>\r\n              <Form.Control type=\"text\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"valeurPrix\">\r\n              <Form.Label>Entrer le prix coûtant</Form.Label>\r\n              <Form.Control type=\"text\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleAdd}>\r\n              Ajouter une moto\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nFormAjouterMotoHook.defaultProps = { history: \"/\" };\r\nexport default FormAjouterMotoHook;\r\n","import React from \"react\";\r\nimport FormAjouterMotoHook from \"./FormAjouterMotoHook\";\r\n//Dans ce cas il n'y a pas d'état ou d'appel au serveur, pas useState  et de useEffect\r\n//Remplacer la class par la function\r\n//Mettre le mot props en paramètre\r\n//aller chercher le props = props.history, le defaultProps n'a pas besoin du props.\r\nfunction AjouterMotoHook(props) {\r\n  return (\r\n    <>\r\n      <FormAjouterMotoHook history={props.history} />\r\n    </>\r\n  );\r\n}\r\nAjouterMotoHook.defaultProps = { history: \"/\" };\r\nexport default AjouterMotoHook;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nfunction BoutonAjouterMotoHook() {\r\n  return (\r\n    <Row>\r\n      <Col className=\"text-right\">\r\n        <Link to=\"/ajouterMoto\" className=\"btn btn-primary\">\r\n          Ajouter une moto\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n//Il faut exporter les fonctions\r\nexport default BoutonAjouterMotoHook;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Component pour Le cas d'une page introuvable\r\nfunction BoutonRetourAccueilHook() {\r\n  return (\r\n    <Row>\r\n      <Col className=\"text-right\">\r\n        <Link to=\"/\" className=\"btn btn-primary\">\r\n          Retour à l'accueil\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\nexport default BoutonRetourAccueilHook;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Image, Container, Row, Col } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction FormEditMotoHook(props) {\r\n  const [donneesRecues, setDonneesRecues] = useState({\r\n    modele: \"\",\r\n    fabricant: \"\",\r\n    photo: \"\",\r\n    specifications: [\"\", \"\"],\r\n  });\r\n\r\n  const [motoID, setMotoID] = useState(\r\n    props.location.search.substring(4, props.location.search.length)\r\n  );\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    getMoto();\r\n  }, []);\r\n  //On récupère la moto pour ensuite remplir le formulaire.Pour le hook renommer getMoto\r\n  async function getMoto() {\r\n    //On récupère le dernier caractère de l'url substring(4,fin du string)\r\n    //*********Le state motoID, n'est pas déclaré au début de la fonction ou classe************ */\r\n    try {\r\n      await console.log(motoID);\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\" + motoID\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      console.log(this.state.donneesRecues);\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Méthode pour modifier la bd avec le formulaire, semblable à l'ajout ajouter l'id à l'URL et changer la methode pour PUT\r\n  async function editMoto(picture, model, manufacturer, comments, price) {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\" + motoID,\r\n        {\r\n          /*Pour un ajout utiliser la méthode POST */\r\n          method: \"PUT\",\r\n          /*Pour un ajout ajouter un headers */\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: motoID,\r\n            modele: model,\r\n            fabricant: manufacturer,\r\n            photo: picture,\r\n            specifications: [\r\n              {\r\n                description: comments,\r\n              },\r\n              {\r\n                prix: price,\r\n              },\r\n            ],\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        props.history.push(\"/\"); //Retour à la page d'accueil\r\n        toast.warning(\"Modification de la moto, modèle:  \" + model);\r\n\r\n        return jsonResponse;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function handleEdit(event) {\r\n    event.preventDefault(); /*Empêche de rafraîchir la page, car le bouton est de type submit*/\r\n    /*variables des infos entrées dans le formulaire*/\r\n    const picture = document.getElementById(\"photoMoto\").value;\r\n    const model = document.getElementById(\"modeleMoto\").value;\r\n    const manufacturer = document.getElementById(\"fabricantMoto\").value;\r\n    const comments = document.getElementById(\"descriptionMoto\").value;\r\n    const price = document.getElementById(\"prixMoto\").value;\r\n\r\n    /*Fonction pour entrer les infos dans la bd */\r\n    editMoto(picture, model, manufacturer, comments, price);\r\n  }\r\n  //Méthode pour supprimer la moto de la bd, method delete\r\n  async function removeMoto() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3001/adventuremotorcycles/\" + motoID,\r\n        {\r\n          method: \"delete\",\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n\r\n        console.log(\"SUPPRESSION!\");\r\n\r\n        props.history.push(\"/\");\r\n\r\n        toast.error(\"Supression de la moto \");\r\n\r\n        return jsonResponse;\r\n      }\r\n\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Méthode sur événement onBlur, si une image est changé elle s'affichera lorsque l'on sort du champ\r\n\r\n  console.log(donneesRecues.photo);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group controlId=\"modeleMoto\">\r\n                <Form.Label>Modèle de la moto</Form.Label>\r\n                <Form.Control type=\"text\" defaultValue={donneesRecues.modele} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"fabricantMoto\">\r\n                <Form.Label>Fabricant de la moto</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={donneesRecues.fabricant}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"photoMoto\">\r\n                <Form.Label>URL d'une photo de la moto</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Entrer une URL valide\"\r\n                  onBlur={() =>\r\n                    setDonneesRecues.photo(\r\n                      document.getElementById(\"photoMoto\").value\r\n                    )\r\n                  }\r\n                  defaultValue={donneesRecues.photo}\r\n                />\r\n                {donneesRecues.photo !== \"\" && (\r\n                  <Image src={donneesRecues.photo} rounded width=\"125\" />\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"descriptionMoto\">\r\n                <Form.Label>Courte description de la moto</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={donneesRecues.specifications[0].description}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"prixMoto\">\r\n                <Form.Label>Prix de la moto</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={donneesRecues.specifications[1].prix}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\" onClick={handleEdit}>\r\n                Enregistrer\r\n              </Button>\r\n              <p className=\"btn btn-danger ml-3 mt-3\" onClick={removeMoto}>\r\n                Supprimer la Moto\r\n              </p>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default FormEditMotoHook;\r\n","import React from \"react\";\nimport AccueilHook from \"./AccueilHook\";\n/*import { ManageMotorcycle } from \"./ManageMotorcycle\";*/\nimport PageNotFoundHook from \"./PageNotFoundHook\";\n/*Enlever {} lorsque l'on import un hook*/\nimport AjouterMotoHook from \"./AjouterMotoHook\";\nimport BoutonAjouterMotoHook from \"./BoutonAjouterMotoHook\";\nimport BoutonRetourAccueilHook from \"./BoutonRetourAccueilHook\";\nimport FormEditMotoHook from \"./FormEditMotoHook\";\nimport { Route, Switch } from \"react-router-dom\";\n/*useLocation permet de savoir où je me trouve*/\nimport { useLocation } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nfunction App() {\n  let location = useLocation(); /*variable de la page où je me trouve */\n  return (\n    <>\n      {/*Pour enlever le bouton ajouter dans la page d'ajout, la modification et la page not found */}\n      <ToastContainer autoClose={3000} hideProgressBar />\n      {location.pathname !== \"/ajouterMoto\" &&\n        !location.pathname.startsWith(\"/Motorcycle\") && (\n          <BoutonAjouterMotoHook />\n        )}\n      <Switch>\n        <Route path=\"/\" exact component={AccueilHook} />\n        {/*<Route path=\"Motorcycle/:id\" component={ManageMotorcycle} />*/}\n        {/*Le lien est placé dansle component Motorcycle.js */}\n        <Route path=\"/ajouterMoto\" component={AjouterMotoHook} />\n        <Route path=\"/Motorcycle/:modele\" component={FormEditMotoHook} />\n        <Route component={PageNotFoundHook} />\n      </Switch>\n\n      {location.pathname !== \"/\" && <BoutonRetourAccueilHook />}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n//\"homepage\": \"https://mau-d.github.io/AEC_Front_End/Programmation2/adventure_motorcycles_hooks/build\",\nReactDOM.render(\n  <Router basename=\"/AEC_Front_End/Programmation2/adventure_motorcycles_hooks/build\">\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}