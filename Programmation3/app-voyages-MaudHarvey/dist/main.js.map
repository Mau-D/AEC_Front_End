{"version":3,"sources":["./src/app/administration/administration.component.ts","./src/app/administration/administration.component.html","./src/app/mock-caracHotel.ts","./src/app/formulaire-forfait/formulaire-forfait.component.ts","./src/app/formulaire-forfait/formulaire-forfait.component.html","./src/environments/environment.ts","./src/app/forfait-complet/forfait-complet.component.ts","./src/app/forfait-complet/forfait-complet.component.html","./src/app/chart-pie/chart-pie.component.ts","./src/app/chart-pie/chart-pie.component.html","./src/app/chart-line/chart-line.component.ts","./src/app/chart-line/chart-line.component.html","./src/app/forfaits-explorateur/forfaits-explorateur.component.ts","./src/app/forfaits-explorateur/forfaits-explorateur.component.html","./src/app/accueil/accueil.component.ts","./src/app/accueil/accueil.component.html","./src/app/forfaits-tout-sud/forfaits-tout-sud.component.ts","./src/app/forfaits-tout-sud/forfaits-tout-sud.component.html","./src/app/entete/entete.component.ts","./src/app/entete/entete.component.html","./src/app/pied-de-page/pied-de-page.component.ts","./src/app/pied-de-page/pied-de-page.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/etoile/etoile.component.ts","./src/app/etoile/etoile.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/forfait-vedette.pipe.ts","./src/app/recherche-caracteristiques.pipe.ts","./src/app/app.module.ts","./src/app/forfait-mini/forfait-mini.component.ts","./src/app/forfait-mini/forfait-mini.component.html","./src/app/voyages.service.ts","./src/app/mock-durees.ts","./src/app/formulaire-recherche/formulaire-recherche.component.ts","./src/app/formulaire-recherche/formulaire-recherche.component.html","./src/app/forfaits-tout-sud.pipe.ts","./src/app/table-forfaits/table-forfaits.component.ts","./src/app/table-forfaits/table-forfaits.component.html","./src/app/mock-destinations.ts","./src/app/recherche-duree.pipe.ts","./src/app/apropos/apropos.component.ts","./src/app/apropos/apropos.component.html","./src/app/forfait-explorateur-pipe.pipe.ts","./src/app/recherche-depart.pipe.ts","./src/app/mock-villesDepart.ts","./src/app/recherche-etoile.pipe.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-administration',\r\n  templateUrl: './administration.component.html',\r\n  styleUrls: ['./administration.component.css']\r\n})\r\nexport class AdministrationComponent implements OnInit {\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Panneau d'administration, tableau des forfaits et lien vers des graphiques des réservations -->\r\n<div>\r\n    <h1>Administration des forfaits</h1>\r\n    <app-table-forfaits></app-table-forfaits>\r\n    <div>\r\n        <h1>Statistiques des réservations</h1>\r\n        <a routerLink=\"/chart-line\">Nombre de forfaits par date selon les mois de l'année</a><br>\r\n        <a routerLink=\"/chart-pie\">Nombre de forfaits selon catégorie des destinations</a>\r\n    </div>\r\n</div>\r\n\r\n\r\n","//Tableau Mock pour les différents caractéristiques de l'hôtel\r\nexport const caracTableau: string[] = ['WIFI', 'Face à la plage', 'Miniclub', 'Près d\\'un parc ou milieu naturel', 'Ascenseur', 'Mariage', 'Plage', 'Piscine', 'Restaurants', 'Golf', 'Spa', 'Salle de réunion'];\r\n","\r\n\r\n\r\n  \r\nimport { Component, OnInit, Input, Inject } from '@angular/core';\r\n//Importations pour le input avec autocomplete\r\nimport { FormControl } from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { caracTableau } from '../mock-caracHotel';\r\n//Importations pour le dialog\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Forfait } from '../forfait';\r\nimport { destinationsTableau } from '../mock-destinations';\r\nimport { villesDepartTableau } from '../mock-villesDepart';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-formulaire-forfait',\r\n  templateUrl: './formulaire-forfait.component.html',\r\n  styleUrls: ['./formulaire-forfait.component.css']\r\n})\r\n\r\nexport class FormulaireForfaitComponent implements OnInit {\r\n  //Variables des ngModel pour la validation de formulaire\r\n  image:string;\r\n  nomHotel: string;\r\n  adresse: string;\r\n  nbrChambre: number;\r\n  dateDepart: Date;\r\n  dateRetour: Date;\r\n  prix: number;\r\n  rabais: number;\r\n  caracteristiques: string;\r\n  tableauCarac: string[]=this.selectedForfait.hotel.caracteristiques ;\r\n  //Variables pour afficher les caractéristiques de l'hôtel\r\n  caracHotel: string[]= caracTableau;\r\n  \r\n  \r\n  //Variable pour la date minimum de la date de départ, aujourd'hui\r\n  minDateDepart: Date= new Date;\r\n  minDateRetour: Date= new Date;\r\n\r\n  //Variables associés au input en autocomplete, le formControlest utilisé au lieu du ngModel\r\n  destinationControl:FormControl = new FormControl();\r\n  departControl:FormControl = new FormControl();\r\n  \r\n  //Variables des options de l'autocomplete\r\n  destinations: string[] = destinationsTableau\r\n  villes: string[] = villesDepartTableau\r\n\r\n  //Variables des filtres utilisées pour l'autocomplete, la valeur est changée en tableau de string\r\n  filteredDestinations: Observable<string[]>;\r\n  filteredVilles: Observable<string[]>;\r\n  \r\n  \r\n //Fonction pour annuler l'ajout, le dialog ferme\r\n  onAnnulerClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  //État initial des checkbox, du forfait sélectionné\r\n  checkState(i){\r\n    let tab: Array<string> = this.tableauCarac;\r\n    //console.log(\"fonction checkState\" + this.tableauCarac)\r\n    let index:number = tab.indexOf(i);\r\n      //console.log(\"index\" + index);\r\n      //console.log(\"i = \" + i);\r\n      if(index != -1){\r\n        //console.log(\"true\")\r\n        return true;\r\n    }\r\n    \r\n  }\r\n//Pour les caractéristiques de l'hotel\r\n  changeCaracteristiques(objet, valeur) {\r\n    console.log('valeur:' + valeur + 'état: ' + objet)\r\n      const index: number =  this.tableauCarac.indexOf(valeur);\r\n    if(index == -1){\r\n      this.tableauCarac.push(valeur);\r\n    }\r\n    else{\r\n        this.tableauCarac.splice(index, 1); \r\n    }\r\n    console.log(this.tableauCarac)\r\n    return this.newForfait.hotel.caracteristiques = this.tableauCarac;\r\n  }\r\n  \r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormulaireForfaitComponent>, \r\n     public dialogRef2: MatDialogRef<FormulaireForfaitComponent>, \r\n    \r\n    //Rend accessible la valeur du nouveau forfait au parent\r\n    @Inject(MAT_DIALOG_DATA) public newForfait: Forfait,\r\n     @Inject(MAT_DIALOG_DATA) public selectedForfait: Forfait\r\n    ) {}\r\n   \r\n    \r\n  ngOnInit() {\r\n    \r\n  //Ces variables prend la valeur entrée dans le champ et fait un map sur le tableau \r\n  //Pour les destinations\r\n    this.filteredDestinations = this.destinationControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      );\r\n  //Pour les villes de départ\r\n    this.filteredVilles = this.departControl.valueChanges.pipe(\r\n      startWith(\"\"),\r\n      map(value => this._filter2(value))\r\n     \r\n    );\r\n   \r\n  }\r\n   \r\n  //Pour la destination\r\n//Prend la valeur d'entrée, en minuscule\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n  //retourne les résultats, modifié en minuscule, qui incluent la valeur d'entrée\r\n    return this.destinations.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n  //Pour la ville de départ\r\n  private _filter2(value: string): string[] {\r\n    const filterValue2 = value.toLowerCase();\r\n\r\n    return this.villes.filter(\r\n      ville => ville.toLowerCase().indexOf(filterValue2) === 0\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n","<!-- Celui-ci sera placé dans un dialog -->\r\n<!-- Formulaire pour la gestion des forfaits -->\r\n\r\n<mat-grid-list cols=\"4\" rowHeight=\"7rem\">\r\n    <mat-grid-tile [colspan]=\"4\">\r\n        <h1>Formulaire pour la gestions des forfaits</h1>\r\n    </mat-grid-tile>\r\n    <form #forfaitFormAjout=\"ngForm\" id=\"forfaitFormAjout\" >\r\n        <mat-grid-tile [colspan]=\"2\">\r\n            <!-- Choix de la destination avec un autocomplete, les destinations sont dans un tableau de constantes-->\r\n            <!-- La validation d'un input réactif, n'a pas besoin du ngModel, utiliser le formControl  -->\r\n            <mat-form-field class=\"example-half-width\">\r\n                <mat-label>Destination</mat-label>\r\n                <input required type=\"text\" name=\"destination\" placeholder=\"ex.: Cuba\" aria-label=\"Destination\" matInput\r\n                    [formControl]=\"destinationControl\" [matAutocomplete]=\"auto\" [(ngModel)]=\"newForfait.destination\">\r\n                <mat-autocomplete #auto=\"matAutocomplete\">\r\n                    <!-- Boucle pour afficher tous les éléments du tableau transformés en tableau de string -->\r\n                    <mat-option *ngFor=\"let option of filteredDestinations | async\" [value]=\"option\">\r\n                        {{option}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-hint>Entrer l'endroit de la destination</mat-hint>\r\n                <!-- Validation du nom de la destination, required à partir du formControl -->\r\n                <mat-error *ngIf=\"destinationControl.hasError('required')\">\r\n                    Le nom de la destination est <strong>obligatoire</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"2\">\r\n            <!-- Choix de la ville de départ avec un autocomplete, les noms des villes sont dans un tableau de constantes-->\r\n            <!-- La validation d'un input réactif, n'a pas besoin du ngModel, utiliser le formControl  -->\r\n            <mat-form-field class=\"example-half-width\">\r\n                <input required type=\"text\" name=\"villeDepart\" placeholder=\"Ville de départ\" aria-label=\"Ville de départ\" matInput\r\n                    [formControl]=\"departControl\" [matAutocomplete]=\"auto2\"  [(ngModel)]=\"newForfait.villeDepart\">\r\n                <mat-autocomplete autoActiveFirstOption #auto2=\"matAutocomplete\">\r\n                    <mat-option *ngFor=\"let ville of filteredVilles | async\" [value]=\"ville\">\r\n                        {{ville}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-hint>Entrer la ville de départ</mat-hint>\r\n                <!-- Validation du nom de la ville de départ, à partir du formControl -->\r\n                <mat-error *ngIf=\"departControl.hasError('required')\">\r\n                    La ville de départ est <strong>obligatoire</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"2\">\r\n            <!-- Date de départ, obligatoire, min à la date d'aujourd'hui -->\r\n            <mat-form-field class=\"example-half-width example-padding\" appearance=\"fill\">\r\n                <mat-label>Date de départ</mat-label>\r\n                <input matInput name=\"dateDepartD\" [min]=\"minDateDepart\" [matDatepicker]=\"dp\" required [ngModel]=\"dateDepart\"\r\n                    name=\"inputDateDepart\" #inputDateDepart=\"ngModel\"  [(ngModel)]=\"newForfait.dateDepartD\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp></mat-datepicker>\r\n                <!-- Validation de la date de départ -->\r\n                <mat-error *ngIf=\"inputDateDepart.hasError('required')\">\r\n                    La date de départ est <strong>obligatoire</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"2\">\r\n            <!-- Date de retour, obligatoire, min à la date d'aujourd'hui -->\r\n            <mat-form-field class=\"example-half-width example-padding\" appearance=\"fill\">\r\n                <mat-label>Date de retour</mat-label>\r\n                <input matInput [min]=\"minDateRetour\" [matDatepicker]=\"dp1\" required [ngModel]=\"dateRetour\"\r\n                    name=\"inputDateRetour\" #inputDateRetour=\"ngModel\"  [(ngModel)]=\"newForfait.dateRetourD\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp1></mat-datepicker>\r\n                <!-- Validation de la date de départ -->\r\n                <mat-error *ngIf=\"inputDateRetour.hasError('required')\">\r\n                    La date de retour est <strong>obligatoire</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"2\">\r\n            <mat-form-field class=\"example-half-width\">\r\n                <mat-label>Nom de l'hôtel</mat-label>\r\n                <!-- Le nom de l'hôtel doit comporter 2 caractères minimum -->\r\n                <input matInput required minlength=\"2\" name=\"inputNomHotel\" [ngModel]=\"nomHotel\" #inputNomHotel=\"ngModel\"  [(ngModel)]=\"newForfait.hotel.nom\"\r\n                    type=\"text\" placeholder=\"ex : The Fives Beach Hôtel & Residences Playa Del Carmen\" >\r\n                <mat-hint>Entrer le nom complet de l'hôtel</mat-hint>\r\n                <!-- Validation du nom de l'hôtel -->\r\n                <mat-error *ngIf=\"inputNomHotel.hasError('required')\">\r\n                    Le nom de l'hôtel est <strong>obligatoire</strong>\r\n                </mat-error>\r\n                <mat-error *ngIf=\"inputNomHotel.hasError('minlength')\">\r\n                    La longueur minimale est de 2 caractères.\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"2\">\r\n            <!-- Les coordonnées sont obligatoire -->\r\n            <mat-form-field class=\"example-half-width\">\r\n                <mat-label>Coordonnées</mat-label>\r\n                <input matInput type=\"text\" required  name=\"inputAdresse\" [ngModel]=\"adresse\" #inputAdresse=\"ngModel\" [(ngModel)]=\"newForfait.hotel.coordonnees\"\r\n                    placeholder=\"ex. 3 rue de la Plage, Varadero\"  >\r\n                <mat-hint>Entrer l'adresse et la ville de l'hôtel</mat-hint>\r\n                <!-- Validation des coordonnées -->\r\n                <mat-error *ngIf=\"inputAdresse.hasError('required')\">\r\n                    Les coordonnées de l'hôtel sont <strong>obligatoires</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n            <!-- Slider pour le nombre d'étoiles de l'hôtel -->\r\n            <!-- Min=1, Max=5, intervalle de 1 avec affichage de la valeur -->\r\n            <div class=\"margeHaut\">\r\n                <mat-label>Nombre d'étoiles</mat-label>\r\n                <div>\r\n                    <mat-slider required name=\"etoiles\" min=\"1\" max=\"5\" step=\"1\" thumbLabel tickInterval=\"1\" value=\"1\" [(ngModel)]=\"newForfait.hotel.nombreEtoiles\"></mat-slider>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n            <!-- Nombre de chambres de l'hôtel est obligatoire et ne doit pas être négatif -->\r\n            <!-- Un minimum à 1 empêche d'inscrire un nombre négatif -->\r\n            <mat-form-field>\r\n                <mat-label>Nombre de chambre</mat-label>\r\n                <input matInput  type=\"number\" required name=\"inputNbrChambre\" [ngModel]=\"nbrChambre\"  #inputNbrChambre=\"ngModel\" [(ngModel)]=\"newForfait.hotel.nombreChambres\"\r\n                    step=\"100\" placeholder=\"0\" min=\"0\"  >\r\n                <!-- Validation du nombre de chambre -->\r\n                <mat-error *ngIf=\"inputNbrChambre.hasError('required')\">\r\n                    Le nombre de chambre est <strong>obligatoire</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"2\">\r\n            <h2>Caractéristiques de l'hôtel</h2>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"2\" [rowspan]=\"1\">\r\n            <!-- Prix du forfait, obligatoire et ne doit pas être négatif -->\r\n            <!-- Un minimum à 1 empêche d'inscrire un nombre négatif -->\r\n            <mat-form-field>\r\n                <mat-label>Prix du forfait</mat-label>\r\n                <input matInput required [ngModel]=\"prix\" name=\"inputPrix\" #inputPrix=\"ngModel\" type=\"number\" placeholder=\"0.00\"\r\n                    min=\"0.00\" max=\"1000000.00\" step=\"100\" [(ngModel)]=\"newForfait.prix\">\r\n                <!-- Validation du prix du forfait -->\r\n                <mat-error *ngIf=\"inputPrix.hasError('required')\">\r\n                    Le prix du forfait est <strong>obligatoire</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <!-- Caractéristiques de l'hôtel -->\r\n        <mat-grid-tile [colspan]=\"2\" [rowspan]=\"3\">\r\n            <section class=\"sectionCheck\">\r\n                <mat-checkbox class=\"checkCaract example-margin\" name=\"caracteristiques\" *ngFor=\"let item of caracHotel\"\r\n                    value={{item}} [checked]=\"checkState(item)\" (change)=\"changeCaracteristiques($event, item)\">{{item}}\r\n                </mat-checkbox>\r\n            </section>\r\n        </mat-grid-tile>\r\n        <!-- Rabais -->\r\n        <mat-grid-tile [colspan]=\"2\">\r\n            <mat-form-field>\r\n                <mat-label>Rabais applicable</mat-label>\r\n                <input matInput  [ngModel]=\"rabais\" name=\"inputRabais\" #inputRabais=\"ngModel\" type=\"number\" placeholder=\"0.00\"\r\n                    min=\"0.00\" max=\"1000000.00\" value=\"0\" step=\"1\" [(ngModel)]=\"newForfait.rabais\">\r\n                <!-- Validation du rabais -->\r\n            <!-- ********************** Ajouter une validation pour que le rabais ne dépasse pas un pourcentage du prix du forfait -->\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile  [colspan]=\"2\">\r\n            <mat-form-field>\r\n                <mat-label>Image</mat-label>\r\n                <input matInput required [ngModel]=\"image\" name=\"inputImage\" #inputImage=\"ngModel\" type=\"text\" placeholder=\"url\"\r\n                [(ngModel)]=\"newForfait.image\">\r\n                <!-- Validation du prix du forfait -->\r\n                <mat-error *ngIf=\"inputImage.hasError('required')\">\r\n                    L'image du forfait est <strong>obligatoire</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <!-- Option forfait vedette -->\r\n        <mat-grid-tile [colspan]=\"2\" [rowspan]=\"1\">\r\n            <section>\r\n                <mat-checkbox name=\"vedette\" class=\"checkVedette\" [(ngModel)]=\"newForfait.vedette\">Forfait Vedette</mat-checkbox>\r\n            </section>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"2\" [rowspan]=\"1\">\r\n            <div mat-dialog-actions>\r\n                <button mat-button (click)=\"onAnnulerClick()\">Annuler</button>\r\n                <button  mat-button [mat-dialog-close]=\"newForfait\" cdkFocusInitial>Ok</button>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </form>\r\n</mat-grid-list>\r\n\r\n\r\n    \r\n\r\n    \r\n   \r\n    \r\n   \r\n   \r\n    \r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Forfait } from '../forfait';\r\nimport { Formulaire } from '../formulaire';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-forfait-complet',\r\n  templateUrl: './forfait-complet.component.html',\r\n  styleUrls: ['./forfait-complet.component.css']\r\n})\r\n\r\nexport class ForfaitCompletComponent implements OnInit {\r\n\r\n  //Inclure la propriété, déclaré dans app pour les valeursdes forfaits\r\n  @Input() proprietesForfait: Forfait;\r\n \r\n  //Propriété pour les infos inscrites dans le formulaire de recherche\r\n  @Input() formulaire: Formulaire;\r\n  //Pour le calcul de la durée du forfait\r\n  @Input() date1: Date = new Date;\r\n  @Input() date2: Date  = new Date;\r\n  \r\n  //Fonction our le calcul de la durée du forfait\r\n\r\n  calculateDiff(depart, retour){\r\n  var depart: any = new Date(this.date1);\r\n  var retour: any = new Date(this.date2);\r\n  var diff: any = Math.floor((retour - depart) / (1000 * 60 * 60 * 24));\r\n  return diff;\r\n}\r\n  \r\n  \r\n  constructor() {\r\n  \r\n\r\n   }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n  \r\n}\r\n","\r\n<!-- Forfait complet comprend toutes les informations -->\r\n<!-- Utilisation d'un gridList à 5 colonnes -->\r\n<!-- Une classe est appliquée pour identifier les forfaits vedettes -->\r\n\r\n    <!-- <div class=\"criteres\">\r\n        <h3>Critères de recherche</h3>\r\n        <p>Date de Départ: {{formulaire.dateDepart}}</p>\r\n        <p>Durée: {{formulaire.duree}}</p>\r\n        <p>Nombre d'étoiles : {{formulaire.nbrEtoiles}}</p>\r\n        <p>Caractéristiques de l'hôtel: <span *ngFor=\"let item of formulaire.caracHotel\">{{item}}, </span></p>\r\n    </div> -->\r\n    <mat-grid-list cols=\"7\" rowHeight=\"5rem\" [ngClass]=\"{'couleurVedette' : proprietesForfait.vedette}\">\r\n        <!-- Si c'est un forfait vedette un titre est ajouté en haut du forfait -->\r\n        <mat-grid-tile class=\"titreVedette\"  [colspan]=\"6\" *ngIf=\"proprietesForfait.vedette\">\r\n            <h1>Forfait Vedette</h1>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"3\" [rowspan]=\"9\">\r\n            <img src=\"{{proprietesForfait.image}}\"/>\r\n        </mat-grid-tile>\r\n        <!-- destination-->\r\n        <mat-grid-tile class=\"description\" [colspan]=\"2\">\r\n            <h3 class=\"titre\">{{proprietesForfait.destination}}</h3>\r\n        </mat-grid-tile>\r\n        <!--<mat-grid-tile class=\"espace\" [rowspan]=\"13\"></mat-grid-tile> espace -->\r\n    <!-- Calcul de la durée du forfait à partir de la date de départ et de retour dans le mock-forfaits -->\r\n        <mat-grid-tile class=\"duree\" [colspan]=\"2\">\r\n            <h3>{{calculateDiff(date1, date2)}} jours</h3>\r\n        </mat-grid-tile>\r\n        <!-- Appliquer un rabais sur le prix des forfaits -->\r\n        <!-- Barrer le prix, afficher le rabais et le nouveau prix, affichage sur trois rangées -->\r\n        <!-- Rabais, est une propriété optionnelle, ajouter la condition >0 pour l'affichage  -->\r\n        <mat-grid-tile [colspan]=\"4\" *ngIf=\"proprietesForfait.rabais>0;else elseEspace\">\r\n            <h1 class=\"accent\">Rabais de {{proprietesForfait.rabais}}, 00$</h1><!-- Rabais -->\r\n        </mat-grid-tile>\r\n        <mat-grid-tile class=\"description\" [colspan]=\"2\">\r\n            <h1 class=\"cursive\">{{proprietesForfait.hotel.nom}}</h1>\r\n        </mat-grid-tile>\r\n        <!-- Si il n'y a pas de rabais, afficher seulement le prix -->\r\n        <ng-template #elseRabais>\r\n            <mat-grid-tile [rowspan]=\"3\" [colspan]=\"2\" class=\"prix\">\r\n                <h1 class=\"accent\">{{proprietesForfait.prix}}, 00$</h1>\r\n            </mat-grid-tile>\r\n        </ng-template>\r\n       \r\n        <!-- Si le rabais s'applique, afficher avec un style pour barrer le prix -->\r\n        <mat-grid-tile [colspan]=\"2\" class=\"prix\" *ngIf=\"proprietesForfait.rabais>0; else elseRabais\">\r\n            <h1 [ngStyle]=\"{'text-decoration' : 'line-through'}\">{{proprietesForfait.prix}}, 00$</h1><!-- Ancien prix -->\r\n        </mat-grid-tile>\r\n       \r\n        <!-- Nombre d'étoiles de l'hôtel, boucle appelée avec le nombre inscrit dans le mock-forfaits -->\r\n        <mat-grid-tile class=\"description\" [colspan]=\"2\">\r\n            <app-etoile [nbrEtoiles]=proprietesForfait.hotel.nombreEtoiles></app-etoile>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"2\" class=\"prix\" *ngIf=\"proprietesForfait.rabais>0\">\r\n            <h1 class=\"accent\">{{proprietesForfait.prix - proprietesForfait.rabais}},00$</h1><!-- Nouveau prix -->\r\n        </mat-grid-tile>\r\n    \r\n        <mat-grid-tile class=\"description\" [colspan]=\"2\">\r\n            <h4>{{proprietesForfait.hotel.nombreChambres}} chambres</h4>\r\n        </mat-grid-tile>\r\n       \r\n        <mat-grid-tile class=\"caracteristiques\" [colspan]=\"4\" [rowspan]=\"3\">\r\n            <div>\r\n                <h3 class=\"cursive\">Caractéristiques de l'hôtel</h3>\r\n                <ul>\r\n                    <li *ngFor=\"let item of proprietesForfait.hotel.caracteristiques\">{{item}}</li>\r\n                </ul>\r\n            </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile class=\"adresse\" [colspan]=\"4\">\r\n            <h4>{{proprietesForfait.hotel.coordonnees}}</h4>\r\n        </mat-grid-tile>\r\n        <!-- Si il n'y a pas de rabais, espace-->\r\n        <ng-template #elseEspace>\r\n            <mat-grid-tile [colspan]=\"4\">\r\n            </mat-grid-tile>\r\n        </ng-template>\r\n\r\n        <mat-grid-tile class=\"villeDepart\" [colspan]=\"3\">\r\n            <h4>{{proprietesForfait.villeDepart}}</h4>\r\n        </mat-grid-tile>\r\n        <!-- Format de date, fullDate, local: Greenwich et en français, voir importations app.module-->\r\n        <mat-grid-tile class=\"depart\" [colspan]=\"2\">\r\n            <h4>{{proprietesForfait.dateDepartD | date : 'fullDate' : 'UTC-0' : 'fr'}}</h4>\r\n        </mat-grid-tile>   \r\n        <mat-grid-tile class=\"retour\" [colspan]=\"2\">\r\n            <h4>{{proprietesForfait.dateRetourD | date : 'fullDate' : 'UTC-0' : 'fr'}}</h4>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ChartType, ChartOptions } from 'chart.js';\nimport { SingleDataSet, Label, monkeyPatchChartJsLegend, monkeyPatchChartJsTooltip } from 'ng2-charts';\nimport { VoyagesService } from '../voyages.service';//Service\nimport { Reservation } from '../reservation';//Interface\n\n\n\n@Component({\n  selector: 'app-chart-pie',\n  templateUrl: './chart-pie.component.html',\n  styleUrls: ['./chart-pie.component.css']\n})\nexport class ChartPieComponent implements OnInit  {\n  //variable des données de l'API des réservations\n  reservations: Reservation[];\n  reservationsDestinationTableau: Array<number>= [];\n  // Pie\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public pieChartLabels: Label[] = [['Sud'], ['Europe'], ['Asie'], ['Grand Nord']];\n  public pieChartData: SingleDataSet = this.reservationsDestinationTableau;\n  public pieChartType: ChartType = 'pie';\n  public pieChartLegend = true;\n  public pieChartPlugins = [];\n  public pieChartColors:Array<any> = [{\n    backgroundColor: ['red', 'yellow', 'rgba(148,159,177,0.2)', 'blue'],\n    borderColor: ['rgba(135,206,250,1)', 'rgba(106,90,205,1)', 'rgba(148,159,177,1)', 'green']\n  }];\n\n  constructor(private voyagesService: VoyagesService) {\n   \n  }\n\n  ngOnInit(): void {\n    this.getReservations();\n   \n\n   }\n  \n  //Fonction pour le calcul du nombre de réservations selon la destination\n  calculReservationsTable(){\n    let sud: number = 0;\n    let asie: number = 0;\n    let europe: number = 0;\n    let grandnord: number = 0;\n\n    let tableauRes = this.reservations;\n   \n    //Parcourir le tableau des datas\n     tableauRes.forEach(element => {\n      let destination = element.destination;\n      if( destination === 'Sud'){\n          sud++;\n      }\n      else if( destination === 'Asie'){\n          asie++;\n      }\n      else if( destination === 'Europe'){\n          europe++;\n      }\n      else if( destination === 'Grand Nord'){\n          grandnord++;\n      }\n     });\n     //Remplir un tableau pour le les données du graphique\n      this.reservationsDestinationTableau.push(sud);\n      this.reservationsDestinationTableau.push(asie);\n      this.reservationsDestinationTableau.push(europe);\n      this.reservationsDestinationTableau.push(grandnord);\n  }\n //Fonction qui récupère les données de l'API\n //Le code est modifié pour permettre l'attente des de la réponse de l'API avant de continuer les autres lignes de code en dessous\n  getReservations(): void {\n    this.voyagesService.getReservations()\n        .subscribe((resultat) => {this.reservations = resultat;\n     this.calculReservationsTable();});\n  }\n}\n\n\n\n    ","<!-- Graphique en pointes de tarte pour représenter le nombre de réservations selon la destination -->\n<div class=\"flex\">\n    <h1>Nombre de forfaits selon catégorie des destinations</h1>\n    <div style=\"display: block;\">\n        <canvas baseChart \n            [data]=\"pieChartData\" \n            [labels]=\"pieChartLabels\" \n            [chartType]=\"pieChartType\"\n            [options]=\"pieChartOptions\" \n            [plugins]=\"pieChartPlugins\" \n            [legend]=\"pieChartLegend\"\n            [colors]=\"pieChartColors\">\n        </canvas>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\nimport { Reservation } from '../reservation';//Interface\nimport { VoyagesService } from '../voyages.service';//Service\n\n@Component({\n  selector: 'app-chart-line',\n  templateUrl: './chart-line.component.html',\n  styleUrls: ['./chart-line.component.css']\n})\n\nexport class ChartLineComponent implements OnInit {\n//variable des données de l'API des réservations\n  reservations: Reservation[];\n  //variable pour les dates\n  janvier: Array<number> = [];\n  decembre: Array<number>=[];\n \n  \n  public lineChartData: ChartDataSets[] = [\n    { data: this.decembre, label: 'Décembre' },{ data: this.janvier, label: 'Janvier' }\n  ];\n  public lineChartLabels: Label[] = ['1er', '2', '3', '4', '5', '6', '7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31'];\n  \n  public lineChartColors: Color[] = [\n    {\n      borderColor: 'black',\n      backgroundColor: ['rgba(255,0,0,0.3)']\n    },\n     {\n      borderColor: 'black',\n      backgroundColor: ['rgba(20,191,209,0.3)']\n    }\n  ];\n  public lineChartLegend = true;\n  public lineChartType = 'line';\n  public lineChartPlugins = [];\n//Fonction pour le calcul de réservations par date, enté ensuite dans les tableaux pour le graphiques\n  calculReservationsTable() {\n    let tableauRes = this.reservations;\n    let tabJanvier: Array<number> = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n    let tabDecembre: Array<number> = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n    tableauRes.forEach(element => {\n      let dateForfait: Date = new Date(element.dateReservation);\n      for(let i:number=0; i<31;i++){\n       //Janvier getMonth=0\n        if( dateForfait.getMonth() === 0){\n          if(dateForfait.getDate() === i+1){\n            tabJanvier[i]++\n            this.janvier[i]=tabJanvier[i]\n          }\n        }\n       //Décembre getMonth=11\n       else if( dateForfait.getMonth() === 11){\n         if(dateForfait.getDate() === i+1){\n           tabDecembre[i]++\n          this.decembre[i]=tabDecembre[i]\n         }\n       }\n     }\n    });\n  };\n\n    ngOnInit(): void {\n    this.getReservations();\n  \n  } \n   \n  constructor(private voyagesService: VoyagesService) {\n    \n   }\n  \n //Fonction qui récupère les données de l'API\n //Le code est modifié pour permettre l'attente des de la réponse de l'API avant de continuer les autres lignes de code en dessous\n  getReservations(): void {\n    this.voyagesService.getReservations()\n        .subscribe((resultat) => {this.reservations = resultat;\n     this.calculReservationsTable();});\n  }\n}\n","<!-- Graphique linéaire pour représenter le nombre de réservations selon la date séparé par mois de l'année -->\n<div>\n  <h1>Nombre de forfaits selon la date par mois de l'année</h1>\n  <div class=\"flex\">\n    <div class=\"flex-item\">\n      <div>\n        <canvas baseChart \n                    [datasets]=\"lineChartData\"\n                    [labels]=\"lineChartLabels\"\n                    [colors]=\"lineChartColors\"\n                    [legend]=\"lineChartLegend\"\n                    [chartType]=\"lineChartType\"\n                    [plugins]=\"lineChartPlugins\"\n                  >\n        </canvas>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Forfait } from '../forfait';\r\nimport { VoyagesService } from '../voyages.service'; // service pour API\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-forfaits-explorateur',\r\n  templateUrl: './forfaits-explorateur.component.html',\r\n  styleUrls: ['./forfaits-explorateur.component.css']\r\n})\r\nexport class ForfaitsExplorateurComponent implements OnInit {\r\n  //variable pour le forfait entier contenant le tableau mock\r\n  forfaits: Forfait[];\r\n\r\n  \r\n  constructor(private voyagesService: VoyagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    //Appelle de la fonction à l'ouverture de la page\r\n    this.getVoyages();\r\n\r\n  }\r\n  //Fonction qui récupère les données de l'API\r\n  getVoyages(): void {\r\n    this.voyagesService.getVoyages()\r\n        .subscribe(resultat => this.forfaits = resultat);\r\n  }\r\n\r\n}\r\n","<div id=\"explorateurHaut\">\r\n    <div class=\"page\">\r\n        <div class=\"sousTitre\">\r\n            <h5>\r\n                Partez à l'aventure...\r\n            </h5>\r\n        </div>\r\n    </div>\r\n    <div class=\"box effect2\">\r\n        <h1>\r\n            Forfaits Explorateur\r\n        </h1>\r\n    </div>\r\n    <div class=\"espaceGrand\">\r\n        <!-- Afficher les forfaits n'ayant pas une destination tout sud, donc explorateur-->\r\n        <mat-grid-list cols=\"1\" rowHeight=\"60rem\">\r\n            <mat-grid-tile *ngFor=\"let item of forfaits | forfaitExplorateurPipe\">\r\n                <app-forfait-complet class=\"child-css\" [date1]=item.dateDepartD [date2]=item.dateRetourD  [proprietesForfait]=item>\r\n                </app-forfait-complet>\r\n                <mat-divider></mat-divider><!-- Placer à l'intérieur du grid-tile -->\r\n            </mat-grid-tile> \r\n        </mat-grid-list>\r\n    </div>\r\n    <a routerLink=\"/explorateur\" fragment=\"explorateurHaut\" class=\"lienHaut\">\r\n        <span class=\"material-icons\">\r\n            arrow_circle_up\r\n        </span>\r\n    </a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Forfait } from '../forfait';\r\n//import { FORFAITS } from '../mock-forfaits';\r\nimport { Formulaire } from '../formulaire';\r\nimport { VoyagesService } from '../voyages.service'; // service pour API\r\n\r\n@Component({\r\n  selector: 'app-accueil',\r\n  templateUrl: './accueil.component.html',\r\n  styleUrls: ['./accueil.component.css']\r\n})\r\nexport class AccueilComponent implements OnInit {\r\n //variable pour le forfait entier contenant le tableau mock\r\n //Avec l'utilisation du service la variable est initialisé en tableau vide.\r\n  forfaits: Forfait[];\r\n\r\n  //Objet contenant les informations entrées dans le formulaire de recherche\r\n  formulaire :Formulaire = {\r\n    dateDepart: new Date,\r\n    duree: 0,\r\n    nbrEtoiles: 1,\r\n    caracHotel: [''],\r\n  }\r\n  //Ajouter le service dans l'argument du constructeur\r\n  constructor(private voyagesService: VoyagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    //Appelle de la fonction à l'ouverture de la page\r\n    this.getVoyages();\r\n\r\n  }\r\n//Fonction qui récupère les données de l'API\r\n  getVoyages(): void {\r\n    this.voyagesService.getVoyages()\r\n        .subscribe(resultat => this.forfaits = resultat);\r\n  }\r\n  //Le void définit une fonction sans return en TS\r\n\r\n}\r\n","<!-- Composant accueil, contenant les forfaits vedettes et la liste des forfaits sous forme de gridList -->\r\n\r\n<!-- Contenu de la page, 100% de la largeur, contenant la section recherche et page -->\r\n<div class=\"contenuPage\"  id=\"hautDePage\">\r\n    <div id=\"sectionRecherche\">\r\n        <!-- Pour la section pour le bouton de recherche -->\r\n        <div id=\"boutonRecherche\">\r\n            <button mat-button (click)=\"sidenav.toggle()\">\r\n                <i class=\"material-icons\">double_arrow</i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"sectionPage\">\r\n        <mat-drawer-container>\r\n            <!-- Pour la section pour le formulaire de recherche -->\r\n            <mat-drawer #sidenav mode=\"side\" autosize>\r\n                <button mat-button (click)=\"sidenav.toggle()\" class=\"boutonFermer\"><i class=\"material-icons\">double_arrow</i></button>\r\n                <app-formulaire-recherche [(formulaire)]=\"formulaire\"></app-formulaire-recherche>\r\n            </mat-drawer>\r\n            <mat-drawer-content>\r\n                <div class=\"banniere\">\r\n                    <div class=\"imgAccueil\">\r\n                        <div class=\"vedetteTexte\">\r\n                            <h1 class=\"titre\">Nos forfaits vedettes</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"espaceMini\">\r\n                    <!-- Filtre pour afficher seulement les forfaits vedettes en mini avec ForfaitVedettePipe, dans le haut -->\r\n                    <mat-grid-list cols=\"9\" rowHeight=\"14rem\">\r\n                        <mat-grid-tile [colspan]=\"3\" [rowspan]=\"3\" *ngFor=\"let forfait of forfaits | PipeForfaitVedette\">\r\n                            <app-forfait-mini class=\"child-css\" [proprietesForfait]=forfait [date1]=forfait.dateDepartD\r\n                                [date2]=forfait.dateRetourD></app-forfait-mini>\r\n                        </mat-grid-tile>\r\n                    </mat-grid-list>\r\n                </div>\r\n                <!-- Accordéon pour afficher les critères de recherche -->\r\n                <mat-accordion>\r\n                    <mat-expansion-panel hideToggle>\r\n                        <mat-expansion-panel-header>\r\n                            <mat-panel-description>\r\n                                Vos critères de recherche\r\n                            </mat-panel-description>\r\n                        </mat-expansion-panel-header>\r\n                        <div class=\"criteres\">\r\n                            <p>Date de Départ: {{formulaire.dateDepart | date : 'fullDate' : 'UTC-0' : 'fr'}}</p>\r\n                            <p *ngIf=\"formulaire.duree != 0; else elseDuree\">Durée: {{formulaire.duree}}</p>\r\n                            <ng-template #elseDuree>\r\n                                <p>Durée : Peu importe</p>\r\n                            </ng-template>\r\n                            <p *ngIf=\"formulaire.nbrEtoiles != 0; else elseEtoile\">Nombre d'étoiles : {{formulaire.nbrEtoiles}}</p>\r\n                            <ng-template  #elseEtoile>\r\n                                <p>Nombre d'étoiles : Peu importe</p>\r\n                            </ng-template>\r\n                            <p>Caractéristiques de l'hôtel: <span *ngFor=\"let item of formulaire.caracHotel\">{{item}}, </span></p>\r\n                        </div>\r\n                    </mat-expansion-panel>\r\n                </mat-accordion>\r\n                <a routerLink=\"\" fragment=\"hautDePage\" class=\"lienHaut\">\r\n                    <span class=\"material-icons\">\r\n                        arrow_circle_up\r\n                    </span>\r\n                </a>\r\n                <div class=\"forfaitTexte titre\">\r\n                    <h1 class=\"titre\">Tous nos forfaits</h1>\r\n                </div>\r\n              <div class=\"espaceGrand\">\r\n                    <!-- Afficher tous les forfaits avec toutes le informations séparés d'un diviseur, les forfaits complets sont placés sous les forfaits vedettes -->\r\n                    <mat-grid-list cols=\"1\" rowHeight=\"60rem\" >\r\n                        <mat-grid-tile *ngFor=\"let item of forfaits | rechercheDuree :formulaire.duree| rechercheDepart :formulaire.dateDepart | rechercheEtoile :formulaire.nbrEtoiles | rechercheCaracteristiques :formulaire.caracHotel\">\r\n                            <app-forfait-complet class=\"child-css\" [proprietesForfait]=item\r\n                                [formulaire]=\"formulaire\" [date1]=item.dateDepartD [date2]=item.dateRetourD></app-forfait-complet>\r\n                            <mat-divider></mat-divider><!-- Placer à l'intérieur du grid-tile -->\r\n                        </mat-grid-tile>    \r\n                    </mat-grid-list>\r\n                </div>\r\n            </mat-drawer-content>\r\n        </mat-drawer-container>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- Propriété: proprietesForfait, renvoie toutes les informations de l'API -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Forfait } from '../forfait';\r\nimport { VoyagesService } from '../voyages.service'; // service pour API\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-forfaits-tout-sud',\r\n  templateUrl: './forfaits-tout-sud.component.html',\r\n  styleUrls: ['./forfaits-tout-sud.component.css']\r\n})\r\nexport class ForfaitsToutSudComponent implements OnInit {\r\n  //variable pour le forfait entier contenant le tableau mock\r\n  forfaits: Forfait[];\r\n\r\n  \r\n constructor(private voyagesService: VoyagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    //Appelle de la fonction à l'ouverture de la page\r\n    this.getVoyages();\r\n\r\n  }\r\n  //Fonction qui récupère les données de l'API\r\n  getVoyages(): void {\r\n    this.voyagesService.getVoyages()\r\n        .subscribe(resultat => this.forfaits = resultat);\r\n  }\r\n\r\n}\r\n","<div id=\"sudHaut\">\r\n    <div class=\"page\">\r\n        <div class=\"sousTitre\">\r\n            <h5>\r\n               Partez au soleil...\r\n            </h5>\r\n        </div>\r\n    </div>\r\n    <div class=\"box effect2\">\r\n        <h1>\r\n            Forfaits Tout Sud\r\n        </h1>\r\n    </div> \r\n    <div class=\"espaceGrand\">\r\n        <!-- Afficher les forfaits ayant une destination tout sud-->\r\n        <mat-grid-list cols=\"1\" rowHeight=\"60rem\">\r\n            <mat-grid-tile *ngFor=\"let item of forfaits | PipeForfaitsToutSud\">\r\n                <app-forfait-complet class=\"child-css\" [date1]=item.dateDepartD [date2]=item.dateRetourD [proprietesForfait]=item >\r\n                </app-forfait-complet>\r\n                <mat-divider></mat-divider><!-- Placer à l'intérieur du grid-tile -->\r\n            </mat-grid-tile>\r\n        </mat-grid-list>\r\n        <a routerLink=\"/toutsud\" fragment=\"sudHaut\" class=\"lienHaut\">\r\n            <span class=\"material-icons\">\r\n                arrow_circle_up\r\n            </span>\r\n        </a>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-entete',\r\n  templateUrl: './entete.component.html',\r\n  styleUrls: ['./entete.component.css']\r\n})\r\nexport class EnteteComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Composant pour le menu de navigation, le logo de l'agence de voyage et les onglets de navigation des différentes pages-->\r\n<!-- Utilisation du toolbar de Angular Material -->\r\n<mat-toolbar  class=\"navbar\">\r\n    <!-- Nom et logo de l'agence, retour à l'accueil-->\r\n    <div class=\"logo\"><a routerLink=\"\"><img src=\"../../assets/img/boussole.png\"/> Voyages Aventure</a></div>\r\n    <!-- Menu de navigation -->\r\n    <div>\r\n        <a routerLink=\"/apropos\">À propos</a>\r\n        <button mat-button [matMenuTriggerFor]=\"menu\">Forfaits</button>\r\n        <mat-menu #menu=\"matMenu\">\r\n            <a routerLink=\"/toutsud\" mat-menu-item>Tout Sud</a>\r\n            <a routerLink=\"/explorateur\" mat-menu-item>Explorateur</a>\r\n        </mat-menu>\r\n        <a routerLink=\"/administration\">Administration</a>\r\n    </div>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pied-de-page',\r\n  templateUrl: './pied-de-page.component.html',\r\n  styleUrls: ['./pied-de-page.component.css']\r\n})\r\nexport class PiedDePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"piedPage\">\r\n    <div class=\"logo\">\r\n        <img src=\"../../assets/img/boussole.png\" />\r\n        <p>Voyages Aventure</p>\r\n    </div>\r\n</div>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-etoile',\r\n  templateUrl: './etoile.component.html',\r\n  styleUrls: ['./etoile.component.css']\r\n})\r\nexport class EtoileComponent implements OnInit {\r\n@Input() nbrEtoiles: number;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Composant pour l'affichage de l'évaluation avec un nombre d'étoile -->\r\n<!-- Utiliser le materials-icons, le nombre d'étoiles est défini dans l'API' -->\r\n<!-- Un icône star_rate est appelé le nombre de fois que le nombre d'étoiles de l'hôtel -->\r\n<!-- On ajoute l'icône star_border pour un total de 5 étoiles -->\r\n<span *ngFor=\"let item of [].constructor(nbrEtoiles)\" class=\"material-icons couleur\" >\r\n    star_rate\r\n</span>\r\n<span *ngFor=\"let item of [].constructor(5-nbrEtoiles)\"class=\"material-icons\">\r\n    star_border\r\n</span>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app-voyages-MaudHarvey';\r\n  \r\n}\r\n","<!-- Composant racine, contenant les composants toujours visibles et le module pour les routes -->\r\n\r\n<app-entete></app-entete>\r\n<router-outlet></router-outlet>\r\n<app-pied-de-page></app-pied-de-page>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Forfait } from './forfait';\r\n\r\n//Pipe our le tri des forfaits vedette afficher dans le composant forfait-mini\r\n@Pipe({\r\n  name: 'PipeForfaitVedette'\r\n})\r\nexport class ForfaitVedettePipe implements PipeTransform { \r\n //La condition est ajoutée pour enlever l'erreur dans le cas d'une valeur null\r\n  transform(forfaits: Forfait[]): Forfait[] {   \r\n     if(!forfaits)\r\n        return forfaits;\r\n    return forfaits.filter(forfait => forfait.vedette); \r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Forfait } from './forfait';\n\n@Pipe({\n  name: 'rechercheCaracteristiques',\n  pure: false//Forcer le pipe à chaque changement\n})\nexport class RechercheCaracteristiquesPipe implements PipeTransform {\n\n  transform(forfaits: Forfait[], carac: Array<string>): Forfait[] {   \n    //Si aucune caractéristiques est sélectionné\n      if(!forfaits || carac.length == 0)\n        return forfaits;\n      else {\n        for (var i=0; i<carac.length; i++){ \n          return (forfaits.filter(forfait => (\n            forfait.hotel.caracteristiques.indexOf(carac[i]) !=-1 ) \n         ))};\n      }\n  }\n}\n//Le filtre sélectionnement seulement si un des éléments de la liste est présent\n//Cherche solution pour combiné les caractéristiques","//Importations de modules angular\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';//Module pour le service\r\n\r\n//Routage pour la navigation\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n\r\n//Importations des composants\r\nimport { AppComponent } from './app.component';\r\nimport { ForfaitCompletComponent } from './forfait-complet/forfait-complet.component';\r\nimport { ForfaitMiniComponent } from './forfait-mini/forfait-mini.component';\r\nimport { EtoileComponent } from './etoile/etoile.component';\r\nimport { FormulaireForfaitComponent } from './formulaire-forfait/formulaire-forfait.component';\r\nimport { FormulaireRechercheComponent } from './formulaire-recherche/formulaire-recherche.component';\r\nimport { EnteteComponent } from './entete/entete.component';\r\nimport { PiedDePageComponent } from './pied-de-page/pied-de-page.component';\r\nimport { AccueilComponent } from './accueil/accueil.component';\r\nimport { AproposComponent } from './apropos/apropos.component';\r\nimport { AdministrationComponent } from './administration/administration.component';\r\nimport { ForfaitsToutSudComponent } from './forfaits-tout-sud/forfaits-tout-sud.component';\r\nimport { ForfaitsExplorateurComponent } from './forfaits-explorateur/forfaits-explorateur.component';\r\nimport { TableForfaitsComponent } from './table-forfaits/table-forfaits.component';\r\nimport { ChartLineComponent } from './chart-line/chart-line.component';\r\nimport { ChartPieComponent } from './chart-pie/chart-pie.component';\r\n\r\n\r\n//Importations des services\r\nimport { VoyagesService } from './voyages.service';//Fichier pour le service\r\n\r\n//Importations des pipes\r\nimport { ForfaitVedettePipe } from './forfait-vedette.pipe';\r\nimport { ForfaitsToutSudPipe } from './forfaits-tout-sud.pipe';\r\nimport { ForfaitExplorateurPipePipe } from './forfait-explorateur-pipe.pipe';\r\nimport { RechercheEtoilePipe } from './recherche-etoile.pipe';\r\nimport { RechercheDepartPipe } from './recherche-depart.pipe';\r\nimport { RechercheDureePipe } from './recherche-duree.pipe';\r\nimport { RechercheCaracteristiquesPipe } from './recherche-caracteristiques.pipe';\r\n\r\n\r\n\r\n\r\n//Importations pour les dates en français\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeFr from '@angular/common/locales/fr';\r\nregisterLocaleData(localeFr, 'fr');\r\n\r\n//Graphiques\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\n//Importations de Angular Material\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ForfaitCompletComponent,\r\n    ForfaitMiniComponent,\r\n    EtoileComponent,\r\n    FormulaireForfaitComponent,\r\n    ForfaitVedettePipe,\r\n    FormulaireRechercheComponent,\r\n    AccueilComponent,\r\n    EnteteComponent,\r\n    PiedDePageComponent,\r\n    AproposComponent,\r\n    AdministrationComponent,\r\n    ForfaitsToutSudComponent,\r\n    ForfaitsExplorateurComponent,\r\n    TableForfaitsComponent,\r\n    ForfaitsToutSudPipe,\r\n    ChartLineComponent,\r\n    ForfaitExplorateurPipePipe,\r\n    ChartPieComponent,\r\n    RechercheEtoilePipe,\r\n    RechercheDepartPipe,\r\n    RechercheDureePipe,\r\n    RechercheCaracteristiquesPipe,\r\n    \r\n  ],\r\n  \r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSliderModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    ChartsModule,\r\n    MatExpansionModule\r\n  ],\r\n  //Calendrier en français\r\n  providers: [ {provide: MAT_DATE_LOCALE, useValue: 'fr-CA'}, VoyagesService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Forfait } from '../forfait';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forfait-mini',\r\n  templateUrl: './forfait-mini.component.html',\r\n  styleUrls: ['./forfait-mini.component.css']\r\n})\r\nexport class ForfaitMiniComponent implements OnInit {\r\n  //Inclure la propriété, déclaré dans app pour les valeurs du mock-forfait\r\n  @Input() proprietesForfait: Forfait;\r\n  @Input() description: string;\r\n  //Pour le calcul de la durée du forfait\r\n  @Input() date1: Date = new Date;\r\n  @Input() date2: Date  = new Date;\r\n  //Pour fermer le card collapsible\r\n   collapsed: boolean=true;\r\n  //Fonction pour le calcul de la durée du forfait\r\n  calculateDiff(depart, retour){\r\n  var depart: any = new Date(this.date1);\r\n  var retour: any = new Date(this.date2);\r\n  var diff: any = Math.floor((retour - depart) / (1000 * 60 * 60 * 24));\r\n  return diff;\r\n}\r\n  constructor() { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Composant pour afficher les forfaits vedettes en haut de page -->\r\n<!-- Sous forme de card simple, placer quelques informations à l'aide d'un grid-list -->\r\n<!--  Condition: seulement les forfaits possédant l'attribut forfaitVedette= true-->\r\n<!-- Utilisation d'un filtre dans acuueil.component.html, *ngFor=\"let forfait of forfaits | PipeForfaitVedette\" -->\r\n<!-- Sinon, vous pouvez utiliser, <mat-card *ngIf=\"proprietesForfait.forfaitVedette\">, dans ce composant -->\r\n\r\n<mat-card class=\"couleurVedette\">\r\n    <mat-grid-list cols=\"3\" rowHeight=\"2rem\">\r\n        <mat-card-header>\r\n            <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\">\r\n                <h3><span class=\"titre\">{{proprietesForfait.destination}}</span>,  de {{proprietesForfait.villeDepart}}</h3>\r\n            </mat-grid-tile>    \r\n            <!-- Affichage des rabais sur trois rangées, rabais, prix barré et nouveau prix -->\r\n            <!-- Rabais, est une propriété optionnelle, ajouter la condition >0 pour l'affichage  -->\r\n            <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\" class=\"prix\" *ngIf=\"proprietesForfait.rabais>0; else elseRabais\">\r\n                <h4 class=\"accent\">Rabais de {{proprietesForfait.rabais}}, 00$</h4><!-- Rabais -->\r\n            </mat-grid-tile>\r\n            <ng-template #elseRabais>\r\n                <mat-grid-tile [colspan]=\"3\" [rowspan]=\"6\" class=\"prix\">\r\n                    <h4 class=\"accent\">{{proprietesForfait.prix}}, 00$</h4>\r\n                </mat-grid-tile>\r\n            </ng-template>\r\n            <!-- Si le rabais s'applique, afficher avec un style pour barrer le prix -->\r\n            <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\" class=\"prix\" *ngIf=\"proprietesForfait.rabais>0\">\r\n                <h4 [ngStyle]=\"{'text-decoration' : 'line-through'}\">{{proprietesForfait.prix}}, 00$</h4><!-- Ancien prix -->\r\n            </mat-grid-tile>\r\n        \r\n            <!-- Calcul du nouveau prix -->\r\n            <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\" class=\"prix\" *ngIf=\"proprietesForfait.rabais>0\">\r\n                <h4 class=\"accent\">{{proprietesForfait.prix - proprietesForfait.rabais}}, 00$</h4><!-- Nouveau prix -->\r\n            </mat-grid-tile>\r\n            </mat-card-header>\r\n            <mat-card-content *ngIf=\"!collapsed\">\r\n            <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\">\r\n                <h4 class=\"cursive\">{{proprietesForfait.hotel.nom}}</h4>\r\n            </mat-grid-tile>\r\n            <!-- Nombre d'étoiles de l'hôtel, boucle appelé avec le nombre inscrit dans le mock-forfaits -->\r\n            <mat-grid-tile  [colspan]=\"3\" >\r\n                <app-etoile [nbrEtoiles]=proprietesForfait.hotel.nombreEtoiles></app-etoile>\r\n            </mat-grid-tile>\r\n            <!-- Le format de la date est complète, local: Greenwich  et en français-->\r\n            <!-- Calcul de la durée du forfait à partir de la date de départ et de retour -->\r\n            <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\">\r\n                <h4 class=\"cursive\">{{proprietesForfait.dateDepartD | date : 'fullDate' : 'UTC-0' : 'fr'}}, {{calculateDiff(date1, date2)}} jours</h4>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile [colspan]=\"3\" [rowspan]=\"3\">\r\n                <img src=\"{{proprietesForfait.image}}\" />\r\n            </mat-grid-tile>\r\n            <mat-grid-tile [colspan]=\"3\" class=\"buttonCollapse\">\r\n                <button>\r\n                    <span class=\"material-icons\" (click)=\"collapsed=true\">\r\n                        keyboard_arrow_up\r\n                    </span>                \r\n                </button>\r\n            </mat-grid-tile>\r\n        </mat-card-content>\r\n        <mat-grid-tile [colspan]=\"3\" class=\"buttonCollapse\">\r\n            <button *ngIf=\"collapsed\" (click)=\"collapsed=false\" >\r\n                <span class=\"material-icons accent\">\r\n                    keyboard_arrow_down\r\n                </span>\r\n            </button>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</mat-card>\r\n","//Création de service pour échanger de l'information avec l'API\r\n//https://forfaits-voyages.herokuapp.com/api/forfaits/da/1996416\r\nimport { Injectable } from '@angular/core';\r\n//Pour le service\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n//Importer les interfaces\r\nimport { Forfait } from './forfait';\r\nimport { Reservation } from './reservation';\r\n\r\n\r\n\r\nconst httpOptions = {\r\nheaders: new HttpHeaders({ 'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VoyagesService {\r\n  //Variable de l'url de l'API\r\n  voyagesUrl = 'https://forfaits-voyages.herokuapp.com/api/forfaits/';\r\n  reservationsUrl= 'https://forfaits-voyages.herokuapp.com/api/reservations';\r\n\r\n//Ajouter une variable privée dans l'argument du constructeur  pour le module HttpClient\r\n  constructor(private http: HttpClient) { }\r\n  //Fonction pour appeler l'API pour les forfaits\r\n  getVoyages(): Observable<Forfait[]> {\r\n    return this.http.get<Forfait[]>(this.voyagesUrl + 'da/1996416');  \r\n  }\r\n  //Fonction pour appeler l'API pour les réservations\r\n  getReservations(): Observable<Reservation[]> {\r\n    return this.http.get<Reservation[]>(this.reservationsUrl);\r\n  }\r\n  //Ajout d'un forfait\r\n  addForfait(forfait: Forfait): Observable<Forfait> {\r\n    console.log(forfait);\r\n    return this.http.post<Forfait>(this.voyagesUrl, forfait, httpOptions);\r\n  }\r\n  /** DELETE: suppression du forfait */\r\n  deleteVoyage(id: string): Observable<Forfait> {\r\n    return this.http.delete<Forfait>(this.voyagesUrl + id, httpOptions);\r\n  }\r\n  /** PUT: mise à jour du forfait */\r\n  updateVoyage(forfait: Forfait): Observable<any> {\r\n    const id = forfait._id;\r\n    return this.http.put<Forfait>(this.voyagesUrl + id, forfait, httpOptions);\r\n  }\r\n\r\n}\r\n","//Tableau Mock pour les différents durées\r\nexport const dureeTableau: number[] = [7, 10, 14];\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { Formulaire } from '../formulaire';\r\nimport { dureeTableau } from '../mock-durees';\r\nimport { caracTableau } from '../mock-caracHotel';\r\n\r\n@Component({\r\n  selector: 'app-formulaire-recherche',\r\n  templateUrl: './formulaire-recherche.component.html',\r\n  styleUrls: ['./formulaire-recherche.component.css']\r\n})\r\n\r\nexport class FormulaireRechercheComponent implements OnInit {\r\n  constructor() {\r\n  \r\n  }\r\n//Input et output pour l'échange d'informations entre le formulaire de recherche et le composant \r\n  \r\n  @Input() formulaire: Formulaire;\r\n  @Output() formulaireChange = new EventEmitter();\r\n\r\n  //Variable pour le mock tableau des durées à afficher dans le select\r\n dureeTableau: Array<number> = dureeTableau;\r\n\r\n\r\n//Variables des ngModel pour la validation de formulaire\r\n  dateDepart: Date;\r\n  duree: number;\r\n  nbrEtoiles: number;\r\n  caracteristiques: string;\r\n  \r\n  \r\n//Variable pour la date minimum de la date de départ, aujourd'hui\r\n  minDateDepart: Date= new Date;\r\n \r\n//Variables pour les caractéristiques du mock tableau pour les checkbox\r\n  caracHotel: Array<string> = caracTableau;\r\n\r\n\r\n  ngOnInit() {\r\n    //Initialiser la valeur du nombre d'étoiles\r\n    this.formulaire.dateDepart = new Date;\r\n    this.formulaire.duree = 0;\r\n    this.formulaire.nbrEtoiles = 0;\r\n    this.formulaire.caracHotel = [];\r\n  }\r\n \r\n  //Pour la date de départ\r\n  changeDateDepart(nouvelleValeur) {\r\n      \r\n    let nouveauFormulaire : Formulaire =  {dateDepart: nouvelleValeur, \r\n                                            duree : this.formulaire.duree, \r\n                                            nbrEtoiles:this.formulaire.nbrEtoiles,\r\n                                            caracHotel:this.formulaire.caracHotel,\r\n                                          };\r\n    this.formulaire = nouveauFormulaire;\r\n    this.formulaireChange.emit(nouveauFormulaire);\r\n  }\r\n  //Pour la durée\r\n  changeDuree(nouvelleValeur) {\r\n    let nouveauFormulaire : Formulaire =  {dateDepart: this.formulaire.dateDepart, \r\n                                            duree : nouvelleValeur, \r\n                                            nbrEtoiles:this.formulaire.nbrEtoiles,\r\n                                            caracHotel:this.formulaire.caracHotel,\r\n                                          };\r\n    this.formulaire = nouveauFormulaire;\r\n    this.formulaireChange.emit(nouveauFormulaire);\r\n  }\r\n  //Pour le nombre d'étoiles\r\n  changeNbrEtoiles(nouvelleValeur) {\r\n    let nouveauFormulaire : Formulaire =  {dateDepart: this.formulaire.dateDepart, \r\n                                            duree : this.formulaire.duree, \r\n                                            nbrEtoiles:nouvelleValeur,\r\n                                            caracHotel:this.formulaire.caracHotel,\r\n                                          };\r\n    this.formulaire = nouveauFormulaire;\r\n    this.formulaireChange.emit(nouveauFormulaire);\r\n  }\r\n  tableauCarac: string[] = [];\r\n \r\n  //Pour les caractéristiques de l'hotel\r\n    changeCaracteristiques(valeur) {\r\n       const index: number =  this.tableauCarac.indexOf(valeur);\r\n      if(index == -1){\r\n         this.tableauCarac.push(valeur);\r\n      }\r\n      else{\r\n          this.tableauCarac.splice(index, 1);\r\n      }\r\n       let nouveauFormulaire : Formulaire =  {dateDepart: this.formulaire.dateDepart, \r\n                                            duree : this.formulaire.duree, \r\n                                            nbrEtoiles:this.formulaire.nbrEtoiles,\r\n                                            caracHotel:this.tableauCarac,\r\n                                          };\r\n      this.formulaire = nouveauFormulaire;\r\n      this.formulaireChange.emit(nouveauFormulaire);\r\n    }\r\n}","<!-- Formulaire pour faire un tri des forfaits par critères de recherche -->\r\n<form class=\"gridRecherche\">\r\n    <mat-grid-list cols=\"1\" rowHeight=\"6rem\">\r\n        <!-- Titre -->\r\n        <mat-grid-tile >\r\n            <h1>Formulaire de recherche de forfait</h1>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n        <!-- Datepicker pour la date de départ, avec validation, avec validation du required, min à la date d'aujourd'hui -->\r\n            <mat-form-field class=\"example-half-width example-padding\" appearance=\"fill\">\r\n                <mat-label>Date de départ</mat-label>\r\n                <input matInput [min]=\"minDateDepart\" [matDatepicker]=\"dp\" required [ngModel]=\"dateDepart\" (ngModelChange)=\"changeDateDepart($event)\" name=\"inputDateDepart\"\r\n                    #inputDateDepart=\"ngModel\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp></mat-datepicker>\r\n                <mat-error *ngIf=\"inputDateDepart.hasError('required')\">\r\n                    La date de départ est <strong>obligatoire</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n            <!-- Select pour la durée de 7, 10 ou 14 jours -->\r\n            <!-- Validation du required, l'option 180 jours est désactivée -->\r\n            <!-- Exemple pour le input output -->\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Choisir la durée</mat-label>\r\n                    <mat-select required [ngModel]=\"duree\" (ngModelChange)=\"changeDuree($event)\" name=\"inputDuree\"\r\n                        #inputDuree=\"ngModel\">\r\n                        <!-- Les valeurs de durée sont dans le mock-durees -->\r\n                        <mat-option value=\"0\">Toutes les durées</mat-option><!-- option pour toutes les durées -->\r\n                        <mat-option *ngFor=\"let val of dureeTableau\" value={{val}}>{{val}} jours</mat-option>\r\n                        <mat-option value=\"180\" disabled>180 jours</mat-option><!-- option désactivée -->\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"inputDuree.hasError('required')\">\r\n                        La durée du forfait est <strong>obligatoire</strong>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n        </mat-grid-tile>\r\n        <!-- Slider pour le nombre d'étoiles -->\r\n        <mat-grid-tile>\r\n            <div>\r\n                <mat-label>Nombre d'étoiles</mat-label>\r\n                <div>\r\n                    <mat-slider name=\"nbrEtoiles\" [ngModel]=\"nbrEtoiles\" (ngModelChange)=\"changeNbrEtoiles($event)\" min=\"0\" max=\"5\" step=\"1\" thumbLabel tickInterval=\"1\" value=\"0\"></mat-slider>\r\n                    <h6>Pour afficher tous les nombres d'étoiles, sélectionner 0</h6>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile><!-- espace --></mat-grid-tile>\r\n        <!-- Checkbox pour les caractéristiques -->\r\n        <mat-grid-tile>\r\n                <h2>Caractéristiques de l'hôtel</h2>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile [rowspan]=\"4\">\r\n            <form class=\"sectionCheck\"  >\r\n                <mat-checkbox class=\"checkCaract\" name=\"caracHotel\" *ngFor=\"let item of caracHotel\" value={{item}} [ngModel]=\"caracteristiques\" (change)=\"changeCaracteristiques(item)\">{{item}} </mat-checkbox>\r\n            </form>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</form>\r\n\r\n    \r\n  \r\n    \r\n   \r\n      \r\n\r\n    \r\n  \r\n    \r\n    \r\n   \r\n  \r\n    ","import { Pipe, PipeTransform } from '@angular/core';\nimport { Forfait } from './forfait';\n\n\n@Pipe({\n  name: 'PipeForfaitsToutSud'\n})\nexport class ForfaitsToutSudPipe implements PipeTransform {\n//Tri les forfaits qui ont une destination tout sud\n  transform(forfaits: Forfait[]): Forfait[] {   \n     if(!forfaits)\n        return forfaits;\n    return forfaits.filter(forfait => forfait.destination === 'Cuba' || forfait.destination === 'Mexique' || forfait.destination === 'Costa Rica' || forfait.destination === 'Jamaïque'); \n  }\n\n}\n","import { Component, OnInit, ViewChild, ɵgetHostElement } from '@angular/core';\r\nimport { Forfait } from '../forfait';//Interface\r\nimport { VoyagesService } from '../voyages.service';//Service\r\nimport{ MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {MatTable} from '@angular/material/table';  // Permet de mettre à jour les données du tableau pour l'ajout\r\nimport { FormulaireForfaitComponent } from '../formulaire-forfait/formulaire-forfait.component';\r\nimport { caracTableau } from '../mock-caracHotel';\r\n\r\n@Component({\r\n  selector: 'app-table-forfaits',\r\n  templateUrl: './table-forfaits.component.html',\r\n  styleUrls: ['./table-forfaits.component.css']\r\n})\r\n\r\nexport class TableForfaitsComponent implements OnInit {\r\n  @ViewChild(MatTable) table:MatTable<any>;\r\n\r\n \r\n//variable des données de l'API\r\n  forfaits: Forfait[];\r\n //Un tableau contenant la liste des éléments à afficher dans les colonnes\r\n  columnsToDisplay = ['dateDepart','dateRetour','nomHotel','prix', 'actions'];\r\n  //Variable pour l'ajout d'un nouveau forfait\r\n  newForfait: Forfait;\r\n \r\n //Variable de l'élément sélectionné\r\n  selectedForfait: Forfait;\r\n //Ajouter le service dans l'argument du constructeur\r\n  constructor(private voyagesService: VoyagesService, public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //Initialise l'objet newForfait\r\n    this.newForfait = {_id: null, destination:'', villeDepart:'', hotel: {nom:'', coordonnees:'', nombreEtoiles:0, nombreChambres:0, caracteristiques: []}, dateDepartD: null, dateRetourD: null, prix: 0, rabais: 0, vedette: false, image: \"\", da:'1996416'};\r\n\r\n    //Appelle de la fonction à l'ouverture de la page, importe les infos\r\n    this.getVoyages();\r\n  }\r\n//Fonction qui récupère les données de l'API\r\n  getVoyages(): void {\r\n    this.voyagesService.getVoyages()\r\n        .subscribe(resultat => this.forfaits = resultat);\r\n  }\r\n\r\n  //Fonction pour supprimer l'élément\r\n   onDelete(forfait: Forfait): void {\r\n    this.voyagesService.deleteVoyage(forfait._id)\r\n        .subscribe(result => this.forfaits = this.forfaits.filter(f => f !== forfait));\r\n   }\r\n  //Fonction pour l'ouverture du dialog\r\n    //Fonction pour l'ajout lors de l'ouverture et la fermeture du dialog\r\n  openDialogNewForfait(): void {\r\n      const dialogRef = this.dialog.open(FormulaireForfaitComponent, {\r\n      width: '80%',\r\n      height: '80%',\r\n      data: this.newForfait,\r\n      \r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      if(result) {\r\n        this.newForfait = result;\r\n        this.voyagesService.addForfait(this.newForfait)\r\n            .subscribe(forfait  => { this.forfaits.push(forfait); this.newForfait._id = null; this.newForfait.destination=''; this.newForfait.hotel.nom='';this.newForfait.hotel.coordonnees=''; this.newForfait.hotel.nombreEtoiles=0; this.newForfait.hotel.nombreChambres=null; this.newForfait.hotel.caracteristiques=caracTableau; this.newForfait.villeDepart='';  this.newForfait.dateDepartD= null; this.newForfait.dateRetourD= null; this.newForfait.prix= null; this.newForfait.rabais= null; this.newForfait.vedette= false; this.newForfait.image= \"\"; this.table.renderRows()});\r\n      }\r\n    });\r\n  }\r\n  //Pour l'édition\r\n  openDialogEditForfait(forfait: Forfait): void {\r\n      this.selectedForfait = forfait;\r\n      const dialogRef = this.dialog.open(FormulaireForfaitComponent, {\r\n      width: '80%',\r\n      height: '80%',\r\n      data: this.selectedForfait\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      if(result) {\r\n        this.selectedForfait = result;\r\n        this.voyagesService.updateVoyage(this.selectedForfait)\r\n            .subscribe(() => this.selectedForfait = null);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div id=\"tableau\">\r\n   \r\n    <!-- Formulaire d'ajout -->\r\n    <div>\r\n        <h2>Ajout d'un nouveau forfait</h2>\r\n        <button matSuffix type=\"submit\" mat-icon-button (click)=\"openDialogNewForfait()\">\r\n            <i class=\"material-icons\">add</i>\r\n        </button>\r\n    </div>\r\n    <div>\r\n        <!-- Tableau de tous les forfaits pour la gestion -->\r\n        <h1>Tableau des forfaits voyage</h1>\r\n        <!-- Tableau des héros avec mat-table -->\r\n        <table mat-table #tableForfaits [dataSource]=\"forfaits\"  class=\"mat-elevation-z8\">\r\n            <!-- Tableau des données dans le dataSource -->\r\n            <!-- colonnes des données -->\r\n            <ng-container matColumnDef=\"dateDepart\">\r\n                <th mat-header-cell *matHeaderCellDef> Date de départ </th><!-- Titre de la colonne -->\r\n                <td mat-cell *matCellDef=\"let forfait\"> {{forfait.dateDepartD | date : 'fullDate' : 'UTC-0' : 'fr'}} </td> \r\n            </ng-container>\r\n            <ng-container matColumnDef=\"dateRetour\">\r\n                <th mat-header-cell *matHeaderCellDef> Date de retour </th><!-- Titre de la colonne -->\r\n                <td mat-cell *matCellDef=\"let forfait\"> {{forfait.dateRetourD | date : 'fullDate' : 'UTC-0' : 'fr'}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"nomHotel\">\r\n                <th mat-header-cell *matHeaderCellDef> Nom de l'hôtel</th><!-- Titre de la colonne -->\r\n                <td mat-cell *matCellDef=\"let forfait\"> {{forfait.hotel.nom}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"prix\">\r\n                <th mat-header-cell *matHeaderCellDef> Prix </th><!-- Titre de la colonne -->\r\n                <td mat-cell *matCellDef=\"let forfait\"> {{forfait.prix}} </td> Valeur associé à la colonne\r\n            </ng-container>\r\n            <!-- colonne des actions -->\r\n            <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef> </th>\r\n                <td mat-cell *matCellDef=\"let forfait\" class=\"boutonsAction\">\r\n                    <form (ngSubmit)=\"onDelete(forfait)\">\r\n                        <button mat-button><i class=\"material-icons\">delete</i></button>\r\n                    </form>\r\n                    <form (ngSubmit)=\"openDialogEditForfait(forfait)\">\r\n                        <button matSuffix mat-icon-button type=\"submit\">\r\n                            <i class=\"material-icons\">edit</i></button>\r\n                    </form>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n            <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\r\n        </table>\r\n    </div>\r\n</div>","//Tableau Mock pour les différentes destinations\r\nexport const destinationsTableau: string[] = [\"Mexique\", \"Costa Rica\", \"Jamaïque\", \"Cuba\", \"Paris\", \"Thaïlande\", \"Islande\"];\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Forfait } from './forfait';\n\n@Pipe({\n  name: 'rechercheDuree'\n})\nexport class RechercheDureePipe implements PipeTransform {\n  //Fonction pour calculer la durée du forfait\n  //Date de départ et du retour du forfait\n  calculateDiff(depart, retour){\n    var depart: any = new Date(depart);\n    var retour: any = new Date(retour);\n    var diff: any = Math.floor((retour - depart) / (1000 * 60 * 60 * 24));\n    return diff;\n  }\n   transform(forfaits: Forfait[], dureeForfait: number): Forfait[] {   \n      if(!forfaits || dureeForfait == 0)\n        return forfaits;\n      else\n       return forfaits.filter(forfait => \n          this.calculateDiff(forfait.dateDepartD, forfait.dateRetourD) == dureeForfait\n         )\n    }\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apropos',\r\n  templateUrl: './apropos.component.html',\r\n  styleUrls: ['./apropos.component.css']\r\n})\r\nexport class AproposComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div>\r\n    <div class=\"page\">\r\n        <div class=\"sousTitre\">\r\n            <h5>\r\n                Voyager, c’est partir de chez soi               \r\n                c’est quitter ses amis                \r\n                c’est essayer de voler:                \r\n                voler vers d’autres horizons                \r\n                parcourir les routes                \r\n                c’est tenter de changer.               \r\n                Voyager, c’est s’habiller de folie               \r\n                c’est dire « je m’en fiche »               \r\n                c’est vouloir rentrer.               \r\n                Rentrer en savourant les petites choses                \r\n                déguster un verre…               \r\n                C’est désirer recommencer.\r\n            </h5>\r\n        </div>\r\n    </div>\r\n    <div class=\"box effect2\">\r\n        <p>\r\n            Voyages Aventure est une agence de voyage locale spécialiste du sur-mesure pour visiter l'Amérique du Sud, à l'Islande et en\r\n            Europe. Nous sommes extrêmement fiers de notre équipe. Pour chacune de nos destinations, nous disposons d’un expert\r\n            local plein de ressources qui a vécu sur place ou a longuement voyagé dans la région. Notre équipe vous confectionnera\r\n            un voyage adapté à vos envies et au type de vacances que vous préférez. Nous vous présenterons les lieux à ne pas\r\n            manquer sous un jour différent et nous vous conseillerons des endroits que la plupart des touristes ne connaissent pas.\r\n            Nos guides vous feront vivre un séjour que vous n’êtes pas près d’oublier. Nos partenaires sur place sont parmi les\r\n            meilleurs et leur expérience est inégalée.\r\n        </p>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Forfait } from './forfait';\n\n@Pipe({\n  name: 'forfaitExplorateurPipe'\n})\nexport class ForfaitExplorateurPipePipe implements PipeTransform {\n//Tri les forfaits qui n'ont pas une destination tout sud, donc explorateur\n transform(forfaits: Forfait[]): Forfait[] {   \n     if(!forfaits)\n        return forfaits;\n    return forfaits.filter(forfait => forfait.destination != 'Cuba' && forfait.destination != 'Mexique' && forfait.destination != 'Costa Rica' && forfait.destination != 'Jamaïque'); \n  }\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Forfait } from './forfait';\n\n\n@Pipe({\n  name: 'rechercheDepart'\n})\nexport class RechercheDepartPipe implements PipeTransform {\n\n transform(forfaits: Forfait[], departForfait: any): Forfait[] {   \n    let today: any = new Date();\n    let formDepart: Date = (new Date(departForfait));\n\n      if(!forfaits)\n        return forfaits;\n        //Date supérieure à aujourd'hui, afficher les forfaits avec une date supérieure\n        //Voir pour mettre les dates égales\n      if(formDepart > today){\n        //Utiliser .getTime() pour comparer ===  deux dates ensembles\n        return forfaits.filter(forfait => (new Date(forfait.dateDepartD).getTime() === formDepart.getTime()))\n      }\n      //Pour la date d'aujourd'hui, valeur par défaut, retourner tout les forfaits\n      else{\n        return forfaits;\n      }\n  }\n}\n","//Tableau Mock pour les différentes villes de départ\r\nexport const villesDepartTableau: string[] = [\"Montréal\", \"Québec\", \"Toronto\", \"Trois-Rivières\"];\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Forfait } from './forfait';\n\n@Pipe({\n  name: 'rechercheEtoile'\n})\nexport class RechercheEtoilePipe implements PipeTransform {\ntransform(forfaits: Forfait[], etoile: number): Forfait[] {   \n    //Si le nombre d'étoiles n'est pas sélectionné\n      if(!forfaits || etoile == 0)\n        return forfaits;\n      else \n       return forfaits.filter(forfait => \n          forfait.hotel.nombreEtoiles == etoile \n         )\n\n}}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n//Importer les composants utilisés pour la navigation ici\r\nimport { AccueilComponent } from './accueil/accueil.component';\r\nimport { AproposComponent } from './apropos/apropos.component';\r\nimport { AdministrationComponent } from './administration/administration.component';\r\nimport { ForfaitsToutSudComponent } from './forfaits-tout-sud/forfaits-tout-sud.component';\r\nimport { ForfaitsExplorateurComponent } from './forfaits-explorateur/forfaits-explorateur.component';\r\nimport { ChartLineComponent } from './chart-line/chart-line.component';\r\nimport { ChartPieComponent } from './chart-pie/chart-pie.component';\r\n\r\nconst routes: Routes = [\r\n  //Définir les chemins pour accéder au composant ici\r\n  \r\n  { path: '', component: AccueilComponent },\r\n  { path: 'apropos', component: AproposComponent },\r\n  { path: 'administration', component: AdministrationComponent },\r\n  { path: 'toutsud', component: ForfaitsToutSudComponent },\r\n  { path: 'explorateur', component: ForfaitsExplorateurComponent },\r\n  { path: 'chart-line', component: ChartLineComponent },\r\n  { path: 'chart-pie', component: ChartPieComponent }\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy',  useHash: false,\r\n  anchorScrolling: 'enabled', onSameUrlNavigation: 'reload' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}